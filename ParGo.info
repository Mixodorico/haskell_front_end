-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from ParGo.y
-----------------------------------------------------------------------------

state 32 contains 1 shift/reduce conflicts.
state 34 contains 2 shift/reduce conflicts.
state 36 contains 1 shift/reduce conflicts.
state 118 contains 1 shift/reduce conflicts.
state 125 contains 1 shift/reduce conflicts.
state 126 contains 2 shift/reduce conflicts.
state 148 contains 2 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pStart -> Start                             (0)
	Integer -> L_integ                                 (1)
	Double -> L_doubl                                  (2)
	Char -> L_charac                                   (3)
	String -> L_quoted                                 (4)
	Id -> L_Id                                         (5)
	Boolean -> 'true'                                  (6)
	Boolean -> 'false'                                 (7)
	Type -> 'void'                                     (8)
	Type -> 'int'                                      (9)
	Type -> 'bool'                                     (10)
	Type -> 'float'                                    (11)
	Type -> 'char'                                     (12)
	Type -> 'string'                                   (13)
	Type -> '[' Integer ']' Type                       (14)
	Type -> '*' Type                                   (15)
	Pass -> 'val'                                      (16)
	Pass -> 'ref'                                      (17)
	RExp -> RExp '&&' RExp                             (18)
	RExp -> RExp '||' RExp                             (19)
	RExp -> '!' RExp                                   (20)
	RExp -> RExp '==' RExp                             (21)
	RExp -> RExp '!=' RExp                             (22)
	RExp -> RExp '<' RExp                              (23)
	RExp -> RExp '<=' RExp                             (24)
	RExp -> RExp '>' RExp                              (25)
	RExp -> RExp '>=' RExp                             (26)
	RExp -> RExp '+' RExp                              (27)
	RExp -> RExp '-' RExp                              (28)
	RExp -> RExp '*' RExp                              (29)
	RExp -> RExp '/' RExp                              (30)
	RExp -> RExp '%' RExp                              (31)
	RExp -> '-' RExp                                   (32)
	RExp -> '&' LExp                                   (33)
	RExp -> Id '(' ')'                                 (34)
	RExp -> Id '(' ListRExp ')'                        (35)
	RExp -> Val                                        (36)
	RExp -> LExp                                       (37)
	RExp -> '(' RExp ')'                               (38)
	RExp -> 'readInt' '(' ')'                          (39)
	RExp -> 'readFloat' '(' ')'                        (40)
	RExp -> 'readChar' '(' ')'                         (41)
	RExp -> 'readString' '(' ')'                       (42)
	Val -> Integer                                     (43)
	Val -> Double                                      (44)
	Val -> Char                                        (45)
	Val -> String                                      (46)
	Val -> Boolean                                     (47)
	LExp -> Id                                         (48)
	LExp -> LExp '[' RExp ']'                          (49)
	LExp -> '*' RExp                                   (50)
	Start -> 'package' Id ListDecl                     (51)
	Decl -> 'var' ListId Type                          (52)
	Decl -> 'var' ListId '=' ListRExp                  (53)
	Decl -> 'var' ListId Type '=' ListRExp             (54)
	Decl -> 'func' Id '(' ListParam ')' Type Block     (55)
	Decl -> 'func' Id '(' ListParam ')' 'void' Block   (56)
	ShortVarDecl -> ListId ':=' ListRExp               (57)
	Param -> ListId Type                               (58)
	Param -> Pass ListId Type                          (59)
	Block -> '{' ListStmt '}'                          (60)
	Stmt -> Decl                                       (61)
	Stmt -> Block                                      (62)
	Stmt -> StmtSmpl                                   (63)
	Stmt -> 'if' RExp Block                            (64)
	Stmt -> 'if' RExp Block 'else' Block               (65)
	Stmt -> 'for' RExp Block                           (66)
	Stmt -> 'break'                                    (67)
	Stmt -> 'continue'                                 (68)
	Stmt -> 'return' RExp                              (69)
	Stmt -> 'writeInt' '(' RExp ')'                    (70)
	Stmt -> 'writeFloat' '(' RExp ')'                  (71)
	Stmt -> 'writeChar' '(' RExp ')'                   (72)
	Stmt -> 'writeString' '(' RExp ')'                 (73)
	StmtSmpl -> ShortVarDecl                           (74)
	StmtSmpl -> RExp                                   (75)
	StmtSmpl -> LExp '=' RExp                          (76)
	ListRExp -> RExp                                   (77)
	ListRExp -> RExp ',' ListRExp                      (78)
	ListDecl ->                                        (79)
	ListDecl -> ListDecl Decl                          (80)
	ListId -> Id                                       (81)
	ListId -> Id ',' ListId                            (82)
	ListParam ->                                       (83)
	ListParam -> Param                                 (84)
	ListParam -> Param ',' ListParam                   (85)
	ListStmt ->                                        (86)
	ListStmt -> ListStmt Stmt                          (87)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'/'            { PT _ (TS _ 12) }
	':='           { PT _ (TS _ 13) }
	'<'            { PT _ (TS _ 14) }
	'<='           { PT _ (TS _ 15) }
	'='            { PT _ (TS _ 16) }
	'=='           { PT _ (TS _ 17) }
	'>'            { PT _ (TS _ 18) }
	'>='           { PT _ (TS _ 19) }
	'['            { PT _ (TS _ 20) }
	']'            { PT _ (TS _ 21) }
	'bool'         { PT _ (TS _ 22) }
	'break'        { PT _ (TS _ 23) }
	'char'         { PT _ (TS _ 24) }
	'continue'     { PT _ (TS _ 25) }
	'else'         { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'float'        { PT _ (TS _ 28) }
	'for'          { PT _ (TS _ 29) }
	'func'         { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'package'      { PT _ (TS _ 33) }
	'readChar'     { PT _ (TS _ 34) }
	'readFloat'    { PT _ (TS _ 35) }
	'readInt'      { PT _ (TS _ 36) }
	'readString'   { PT _ (TS _ 37) }
	'ref'          { PT _ (TS _ 38) }
	'return'       { PT _ (TS _ 39) }
	'string'       { PT _ (TS _ 40) }
	'true'         { PT _ (TS _ 41) }
	'val'          { PT _ (TS _ 42) }
	'var'          { PT _ (TS _ 43) }
	'void'         { PT _ (TS _ 44) }
	'writeChar'    { PT _ (TS _ 45) }
	'writeFloat'   { PT _ (TS _ 46) }
	'writeInt'     { PT _ (TS _ 47) }
	'writeString'  { PT _ (TS _ 48) }
	'{'            { PT _ (TS _ 49) }
	'||'           { PT _ (TS _ 50) }
	'}'            { PT _ (TS _ 51) }
	L_integ        { PT _ (TI $$) }
	L_doubl        { PT _ (TD $$) }
	L_charac       { PT _ (TC $$) }
	L_quoted       { PT _ (TL $$) }
	L_Id           { PT _ (T_Id $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pStart   rule  0
	Integer         rule  1
	Double          rule  2
	Char            rule  3
	String          rule  4
	Id              rule  5
	Boolean         rules 6, 7
	Type            rules 8, 9, 10, 11, 12, 13, 14, 15
	Pass            rules 16, 17
	RExp            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
	Val             rules 43, 44, 45, 46, 47
	LExp            rules 48, 49, 50
	Start           rule  51
	Decl            rules 52, 53, 54, 55, 56
	ShortVarDecl    rule  57
	Param           rules 58, 59
	Block           rule  60
	Stmt            rules 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73
	StmtSmpl        rules 74, 75, 76
	ListRExp        rules 77, 78
	ListDecl        rules 79, 80
	ListId          rules 81, 82
	ListParam       rules 83, 84, 85
	ListStmt        rules 86, 87

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'package'      shift, and enter state 4

	Start          goto state 3

State 1


	L_integ        shift, and enter state 2


State 2

	Integer -> L_integ .                                (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	']'            reduce using rule 1
	'break'        reduce using rule 1
	'continue'     reduce using rule 1
	'false'        reduce using rule 1
	'for'          reduce using rule 1
	'func'         reduce using rule 1
	'if'           reduce using rule 1
	'readChar'     reduce using rule 1
	'readFloat'    reduce using rule 1
	'readInt'      reduce using rule 1
	'readString'   reduce using rule 1
	'return'       reduce using rule 1
	'true'         reduce using rule 1
	'var'          reduce using rule 1
	'writeChar'    reduce using rule 1
	'writeFloat'   reduce using rule 1
	'writeInt'     reduce using rule 1
	'writeString'  reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	L_integ        reduce using rule 1
	L_doubl        reduce using rule 1
	L_charac       reduce using rule 1
	L_quoted       reduce using rule 1
	L_Id           reduce using rule 1
	%eof           reduce using rule 1


State 3

	%start_pStart -> Start .                            (rule 0)

	%eof           accept


State 4

	Start -> 'package' . Id ListDecl                    (rule 51)

	L_Id           shift, and enter state 6

	Id             goto state 5

State 5

	Start -> 'package' Id . ListDecl                    (rule 51)

	'func'         reduce using rule 79
	'var'          reduce using rule 79
	%eof           reduce using rule 79

	ListDecl       goto state 7

State 6

	Id -> L_Id .                                        (rule 5)

	'!'            reduce using rule 5
	'!='           reduce using rule 5
	'%'            reduce using rule 5
	'&'            reduce using rule 5
	'&&'           reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	'*'            reduce using rule 5
	'+'            reduce using rule 5
	','            reduce using rule 5
	'-'            reduce using rule 5
	'/'            reduce using rule 5
	':='           reduce using rule 5
	'<'            reduce using rule 5
	'<='           reduce using rule 5
	'='            reduce using rule 5
	'=='           reduce using rule 5
	'>'            reduce using rule 5
	'>='           reduce using rule 5
	'['            reduce using rule 5
	']'            reduce using rule 5
	'bool'         reduce using rule 5
	'break'        reduce using rule 5
	'char'         reduce using rule 5
	'continue'     reduce using rule 5
	'false'        reduce using rule 5
	'float'        reduce using rule 5
	'for'          reduce using rule 5
	'func'         reduce using rule 5
	'if'           reduce using rule 5
	'int'          reduce using rule 5
	'readChar'     reduce using rule 5
	'readFloat'    reduce using rule 5
	'readInt'      reduce using rule 5
	'readString'   reduce using rule 5
	'return'       reduce using rule 5
	'string'       reduce using rule 5
	'true'         reduce using rule 5
	'var'          reduce using rule 5
	'void'         reduce using rule 5
	'writeChar'    reduce using rule 5
	'writeFloat'   reduce using rule 5
	'writeInt'     reduce using rule 5
	'writeString'  reduce using rule 5
	'{'            reduce using rule 5
	'||'           reduce using rule 5
	'}'            reduce using rule 5
	L_integ        reduce using rule 5
	L_doubl        reduce using rule 5
	L_charac       reduce using rule 5
	L_quoted       reduce using rule 5
	L_Id           reduce using rule 5
	%eof           reduce using rule 5


State 7

	Start -> 'package' Id ListDecl .                    (rule 51)
	ListDecl -> ListDecl . Decl                         (rule 80)

	'func'         shift, and enter state 9
	'var'          shift, and enter state 10
	%eof           reduce using rule 51

	Decl           goto state 8

State 8

	ListDecl -> ListDecl Decl .                         (rule 80)

	'func'         reduce using rule 80
	'var'          reduce using rule 80
	%eof           reduce using rule 80


State 9

	Decl -> 'func' . Id '(' ListParam ')' Type Block    (rule 55)
	Decl -> 'func' . Id '(' ListParam ')' 'void' Block    (rule 56)

	L_Id           shift, and enter state 6

	Id             goto state 13

State 10

	Decl -> 'var' . ListId Type                         (rule 52)
	Decl -> 'var' . ListId '=' ListRExp                 (rule 53)
	Decl -> 'var' . ListId Type '=' ListRExp            (rule 54)

	L_Id           shift, and enter state 6

	Id             goto state 11
	ListId         goto state 12

State 11

	ListId -> Id .                                      (rule 81)
	ListId -> Id . ',' ListId                           (rule 82)

	'*'            reduce using rule 81
	','            shift, and enter state 25
	':='           reduce using rule 81
	'='            reduce using rule 81
	'['            reduce using rule 81
	'bool'         reduce using rule 81
	'char'         reduce using rule 81
	'float'        reduce using rule 81
	'int'          reduce using rule 81
	'string'       reduce using rule 81
	'void'         reduce using rule 81


State 12

	Decl -> 'var' ListId . Type                         (rule 52)
	Decl -> 'var' ListId . '=' ListRExp                 (rule 53)
	Decl -> 'var' ListId . Type '=' ListRExp            (rule 54)

	'*'            shift, and enter state 16
	'='            shift, and enter state 17
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 24

	Type           goto state 15

State 13

	Decl -> 'func' Id . '(' ListParam ')' Type Block    (rule 55)
	Decl -> 'func' Id . '(' ListParam ')' 'void' Block    (rule 56)

	'('            shift, and enter state 14


State 14

	Decl -> 'func' Id '(' . ListParam ')' Type Block    (rule 55)
	Decl -> 'func' Id '(' . ListParam ')' 'void' Block    (rule 56)

	')'            reduce using rule 83
	'ref'          shift, and enter state 58
	'val'          shift, and enter state 59
	L_Id           shift, and enter state 6

	Id             goto state 11
	Pass           goto state 54
	Param          goto state 55
	ListId         goto state 56
	ListParam      goto state 57

State 15

	Decl -> 'var' ListId Type .                         (rule 52)
	Decl -> 'var' ListId Type . '=' ListRExp            (rule 54)

	'!'            reduce using rule 52
	'&'            reduce using rule 52
	'('            reduce using rule 52
	'*'            reduce using rule 52
	'-'            reduce using rule 52
	'='            shift, and enter state 53
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'false'        reduce using rule 52
	'for'          reduce using rule 52
	'func'         reduce using rule 52
	'if'           reduce using rule 52
	'readChar'     reduce using rule 52
	'readFloat'    reduce using rule 52
	'readInt'      reduce using rule 52
	'readString'   reduce using rule 52
	'return'       reduce using rule 52
	'true'         reduce using rule 52
	'var'          reduce using rule 52
	'writeChar'    reduce using rule 52
	'writeFloat'   reduce using rule 52
	'writeInt'     reduce using rule 52
	'writeString'  reduce using rule 52
	'{'            reduce using rule 52
	'}'            reduce using rule 52
	L_integ        reduce using rule 52
	L_doubl        reduce using rule 52
	L_charac       reduce using rule 52
	L_quoted       reduce using rule 52
	L_Id           reduce using rule 52
	%eof           reduce using rule 52


State 16

	Type -> '*' . Type                                  (rule 15)

	'*'            shift, and enter state 16
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 24

	Type           goto state 52

State 17

	Decl -> 'var' ListId '=' . ListRExp                 (rule 53)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 34
	Val            goto state 35
	LExp           goto state 36
	ListRExp       goto state 37

State 18

	Type -> '[' . Integer ']' Type                      (rule 14)

	L_integ        shift, and enter state 2

	Integer        goto state 27

State 19

	Type -> 'bool' .                                    (rule 10)

	'!'            reduce using rule 10
	'&'            reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	'*'            reduce using rule 10
	','            reduce using rule 10
	'-'            reduce using rule 10
	'='            reduce using rule 10
	'break'        reduce using rule 10
	'continue'     reduce using rule 10
	'false'        reduce using rule 10
	'for'          reduce using rule 10
	'func'         reduce using rule 10
	'if'           reduce using rule 10
	'readChar'     reduce using rule 10
	'readFloat'    reduce using rule 10
	'readInt'      reduce using rule 10
	'readString'   reduce using rule 10
	'return'       reduce using rule 10
	'true'         reduce using rule 10
	'var'          reduce using rule 10
	'writeChar'    reduce using rule 10
	'writeFloat'   reduce using rule 10
	'writeInt'     reduce using rule 10
	'writeString'  reduce using rule 10
	'{'            reduce using rule 10
	'}'            reduce using rule 10
	L_integ        reduce using rule 10
	L_doubl        reduce using rule 10
	L_charac       reduce using rule 10
	L_quoted       reduce using rule 10
	L_Id           reduce using rule 10
	%eof           reduce using rule 10


State 20

	Type -> 'char' .                                    (rule 12)

	'!'            reduce using rule 12
	'&'            reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	'*'            reduce using rule 12
	','            reduce using rule 12
	'-'            reduce using rule 12
	'='            reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'func'         reduce using rule 12
	'if'           reduce using rule 12
	'readChar'     reduce using rule 12
	'readFloat'    reduce using rule 12
	'readInt'      reduce using rule 12
	'readString'   reduce using rule 12
	'return'       reduce using rule 12
	'true'         reduce using rule 12
	'var'          reduce using rule 12
	'writeChar'    reduce using rule 12
	'writeFloat'   reduce using rule 12
	'writeInt'     reduce using rule 12
	'writeString'  reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_integ        reduce using rule 12
	L_doubl        reduce using rule 12
	L_charac       reduce using rule 12
	L_quoted       reduce using rule 12
	L_Id           reduce using rule 12
	%eof           reduce using rule 12


State 21

	Type -> 'float' .                                   (rule 11)

	'!'            reduce using rule 11
	'&'            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	'*'            reduce using rule 11
	','            reduce using rule 11
	'-'            reduce using rule 11
	'='            reduce using rule 11
	'break'        reduce using rule 11
	'continue'     reduce using rule 11
	'false'        reduce using rule 11
	'for'          reduce using rule 11
	'func'         reduce using rule 11
	'if'           reduce using rule 11
	'readChar'     reduce using rule 11
	'readFloat'    reduce using rule 11
	'readInt'      reduce using rule 11
	'readString'   reduce using rule 11
	'return'       reduce using rule 11
	'true'         reduce using rule 11
	'var'          reduce using rule 11
	'writeChar'    reduce using rule 11
	'writeFloat'   reduce using rule 11
	'writeInt'     reduce using rule 11
	'writeString'  reduce using rule 11
	'{'            reduce using rule 11
	'}'            reduce using rule 11
	L_integ        reduce using rule 11
	L_doubl        reduce using rule 11
	L_charac       reduce using rule 11
	L_quoted       reduce using rule 11
	L_Id           reduce using rule 11
	%eof           reduce using rule 11


State 22

	Type -> 'int' .                                     (rule 9)

	'!'            reduce using rule 9
	'&'            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	','            reduce using rule 9
	'-'            reduce using rule 9
	'='            reduce using rule 9
	'break'        reduce using rule 9
	'continue'     reduce using rule 9
	'false'        reduce using rule 9
	'for'          reduce using rule 9
	'func'         reduce using rule 9
	'if'           reduce using rule 9
	'readChar'     reduce using rule 9
	'readFloat'    reduce using rule 9
	'readInt'      reduce using rule 9
	'readString'   reduce using rule 9
	'return'       reduce using rule 9
	'true'         reduce using rule 9
	'var'          reduce using rule 9
	'writeChar'    reduce using rule 9
	'writeFloat'   reduce using rule 9
	'writeInt'     reduce using rule 9
	'writeString'  reduce using rule 9
	'{'            reduce using rule 9
	'}'            reduce using rule 9
	L_integ        reduce using rule 9
	L_doubl        reduce using rule 9
	L_charac       reduce using rule 9
	L_quoted       reduce using rule 9
	L_Id           reduce using rule 9
	%eof           reduce using rule 9


State 23

	Type -> 'string' .                                  (rule 13)

	'!'            reduce using rule 13
	'&'            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'*'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	'='            reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'func'         reduce using rule 13
	'if'           reduce using rule 13
	'readChar'     reduce using rule 13
	'readFloat'    reduce using rule 13
	'readInt'      reduce using rule 13
	'readString'   reduce using rule 13
	'return'       reduce using rule 13
	'true'         reduce using rule 13
	'var'          reduce using rule 13
	'writeChar'    reduce using rule 13
	'writeFloat'   reduce using rule 13
	'writeInt'     reduce using rule 13
	'writeString'  reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_integ        reduce using rule 13
	L_doubl        reduce using rule 13
	L_charac       reduce using rule 13
	L_quoted       reduce using rule 13
	L_Id           reduce using rule 13
	%eof           reduce using rule 13


State 24

	Type -> 'void' .                                    (rule 8)

	'!'            reduce using rule 8
	'&'            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	','            reduce using rule 8
	'-'            reduce using rule 8
	'='            reduce using rule 8
	'break'        reduce using rule 8
	'continue'     reduce using rule 8
	'false'        reduce using rule 8
	'for'          reduce using rule 8
	'func'         reduce using rule 8
	'if'           reduce using rule 8
	'readChar'     reduce using rule 8
	'readFloat'    reduce using rule 8
	'readInt'      reduce using rule 8
	'readString'   reduce using rule 8
	'return'       reduce using rule 8
	'true'         reduce using rule 8
	'var'          reduce using rule 8
	'writeChar'    reduce using rule 8
	'writeFloat'   reduce using rule 8
	'writeInt'     reduce using rule 8
	'writeString'  reduce using rule 8
	'{'            reduce using rule 8
	'}'            reduce using rule 8
	L_integ        reduce using rule 8
	L_doubl        reduce using rule 8
	L_charac       reduce using rule 8
	L_quoted       reduce using rule 8
	L_Id           reduce using rule 8
	%eof           reduce using rule 8


State 25

	ListId -> Id ',' . ListId                           (rule 82)

	L_Id           shift, and enter state 6

	Id             goto state 11
	ListId         goto state 26

State 26

	ListId -> Id ',' ListId .                           (rule 82)

	'*'            reduce using rule 82
	':='           reduce using rule 82
	'='            reduce using rule 82
	'['            reduce using rule 82
	'bool'         reduce using rule 82
	'char'         reduce using rule 82
	'float'        reduce using rule 82
	'int'          reduce using rule 82
	'string'       reduce using rule 82
	'void'         reduce using rule 82


State 27

	Type -> '[' Integer . ']' Type                      (rule 14)

	']'            shift, and enter state 91


State 28

	Val -> Integer .                                    (rule 43)

	'!'            reduce using rule 43
	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'false'        reduce using rule 43
	'for'          reduce using rule 43
	'func'         reduce using rule 43
	'if'           reduce using rule 43
	'readChar'     reduce using rule 43
	'readFloat'    reduce using rule 43
	'readInt'      reduce using rule 43
	'readString'   reduce using rule 43
	'return'       reduce using rule 43
	'true'         reduce using rule 43
	'var'          reduce using rule 43
	'writeChar'    reduce using rule 43
	'writeFloat'   reduce using rule 43
	'writeInt'     reduce using rule 43
	'writeString'  reduce using rule 43
	'{'            reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	L_integ        reduce using rule 43
	L_doubl        reduce using rule 43
	L_charac       reduce using rule 43
	L_quoted       reduce using rule 43
	L_Id           reduce using rule 43
	%eof           reduce using rule 43


State 29

	Val -> Double .                                     (rule 44)

	'!'            reduce using rule 44
	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'='            reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'false'        reduce using rule 44
	'for'          reduce using rule 44
	'func'         reduce using rule 44
	'if'           reduce using rule 44
	'readChar'     reduce using rule 44
	'readFloat'    reduce using rule 44
	'readInt'      reduce using rule 44
	'readString'   reduce using rule 44
	'return'       reduce using rule 44
	'true'         reduce using rule 44
	'var'          reduce using rule 44
	'writeChar'    reduce using rule 44
	'writeFloat'   reduce using rule 44
	'writeInt'     reduce using rule 44
	'writeString'  reduce using rule 44
	'{'            reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	L_integ        reduce using rule 44
	L_doubl        reduce using rule 44
	L_charac       reduce using rule 44
	L_quoted       reduce using rule 44
	L_Id           reduce using rule 44
	%eof           reduce using rule 44


State 30

	Val -> Char .                                       (rule 45)

	'!'            reduce using rule 45
	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'='            reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'break'        reduce using rule 45
	'continue'     reduce using rule 45
	'false'        reduce using rule 45
	'for'          reduce using rule 45
	'func'         reduce using rule 45
	'if'           reduce using rule 45
	'readChar'     reduce using rule 45
	'readFloat'    reduce using rule 45
	'readInt'      reduce using rule 45
	'readString'   reduce using rule 45
	'return'       reduce using rule 45
	'true'         reduce using rule 45
	'var'          reduce using rule 45
	'writeChar'    reduce using rule 45
	'writeFloat'   reduce using rule 45
	'writeInt'     reduce using rule 45
	'writeString'  reduce using rule 45
	'{'            reduce using rule 45
	'||'           reduce using rule 45
	'}'            reduce using rule 45
	L_integ        reduce using rule 45
	L_doubl        reduce using rule 45
	L_charac       reduce using rule 45
	L_quoted       reduce using rule 45
	L_Id           reduce using rule 45
	%eof           reduce using rule 45


State 31

	Val -> String .                                     (rule 46)

	'!'            reduce using rule 46
	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&'            reduce using rule 46
	'&&'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'='            reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'break'        reduce using rule 46
	'continue'     reduce using rule 46
	'false'        reduce using rule 46
	'for'          reduce using rule 46
	'func'         reduce using rule 46
	'if'           reduce using rule 46
	'readChar'     reduce using rule 46
	'readFloat'    reduce using rule 46
	'readInt'      reduce using rule 46
	'readString'   reduce using rule 46
	'return'       reduce using rule 46
	'true'         reduce using rule 46
	'var'          reduce using rule 46
	'writeChar'    reduce using rule 46
	'writeFloat'   reduce using rule 46
	'writeInt'     reduce using rule 46
	'writeString'  reduce using rule 46
	'{'            reduce using rule 46
	'||'           reduce using rule 46
	'}'            reduce using rule 46
	L_integ        reduce using rule 46
	L_doubl        reduce using rule 46
	L_charac       reduce using rule 46
	L_quoted       reduce using rule 46
	L_Id           reduce using rule 46
	%eof           reduce using rule 46


State 32

	RExp -> Id . '(' ')'                                (rule 34)
	RExp -> Id . '(' ListRExp ')'                       (rule 35)
	LExp -> Id .                                        (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 90
			(reduce using rule 48)

	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'func'         reduce using rule 48
	'if'           reduce using rule 48
	'readChar'     reduce using rule 48
	'readFloat'    reduce using rule 48
	'readInt'      reduce using rule 48
	'readString'   reduce using rule 48
	'return'       reduce using rule 48
	'true'         reduce using rule 48
	'var'          reduce using rule 48
	'writeChar'    reduce using rule 48
	'writeFloat'   reduce using rule 48
	'writeInt'     reduce using rule 48
	'writeString'  reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_integ        reduce using rule 48
	L_doubl        reduce using rule 48
	L_charac       reduce using rule 48
	L_quoted       reduce using rule 48
	L_Id           reduce using rule 48
	%eof           reduce using rule 48


State 33

	Val -> Boolean .                                    (rule 47)

	'!'            reduce using rule 47
	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'break'        reduce using rule 47
	'continue'     reduce using rule 47
	'false'        reduce using rule 47
	'for'          reduce using rule 47
	'func'         reduce using rule 47
	'if'           reduce using rule 47
	'readChar'     reduce using rule 47
	'readFloat'    reduce using rule 47
	'readInt'      reduce using rule 47
	'readString'   reduce using rule 47
	'return'       reduce using rule 47
	'true'         reduce using rule 47
	'var'          reduce using rule 47
	'writeChar'    reduce using rule 47
	'writeFloat'   reduce using rule 47
	'writeInt'     reduce using rule 47
	'writeString'  reduce using rule 47
	'{'            reduce using rule 47
	'||'           reduce using rule 47
	'}'            reduce using rule 47
	L_integ        reduce using rule 47
	L_doubl        reduce using rule 47
	L_charac       reduce using rule 47
	L_quoted       reduce using rule 47
	L_Id           reduce using rule 47
	%eof           reduce using rule 47


State 34

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	ListRExp -> RExp .                                  (rule 77)
	ListRExp -> RExp . ',' ListRExp                     (rule 78)

	'!'            reduce using rule 77
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 77
	'&&'           shift, and enter state 78
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            shift, and enter state 79
			(reduce using rule 77)

	'+'            shift, and enter state 80
	','            shift, and enter state 81
	'-'            shift, and enter state 82
			(reduce using rule 77)

	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'break'        reduce using rule 77
	'continue'     reduce using rule 77
	'false'        reduce using rule 77
	'for'          reduce using rule 77
	'func'         reduce using rule 77
	'if'           reduce using rule 77
	'readChar'     reduce using rule 77
	'readFloat'    reduce using rule 77
	'readInt'      reduce using rule 77
	'readString'   reduce using rule 77
	'return'       reduce using rule 77
	'true'         reduce using rule 77
	'var'          reduce using rule 77
	'writeChar'    reduce using rule 77
	'writeFloat'   reduce using rule 77
	'writeInt'     reduce using rule 77
	'writeString'  reduce using rule 77
	'{'            reduce using rule 77
	'||'           shift, and enter state 89
	'}'            reduce using rule 77
	L_integ        reduce using rule 77
	L_doubl        reduce using rule 77
	L_charac       reduce using rule 77
	L_quoted       reduce using rule 77
	L_Id           reduce using rule 77
	%eof           reduce using rule 77


State 35

	RExp -> Val .                                       (rule 36)

	'!'            reduce using rule 36
	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'/'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'='            reduce using rule 36
	'=='           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'break'        reduce using rule 36
	'continue'     reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'func'         reduce using rule 36
	'if'           reduce using rule 36
	'readChar'     reduce using rule 36
	'readFloat'    reduce using rule 36
	'readInt'      reduce using rule 36
	'readString'   reduce using rule 36
	'return'       reduce using rule 36
	'true'         reduce using rule 36
	'var'          reduce using rule 36
	'writeChar'    reduce using rule 36
	'writeFloat'   reduce using rule 36
	'writeInt'     reduce using rule 36
	'writeString'  reduce using rule 36
	'{'            reduce using rule 36
	'||'           reduce using rule 36
	'}'            reduce using rule 36
	L_integ        reduce using rule 36
	L_doubl        reduce using rule 36
	L_charac       reduce using rule 36
	L_quoted       reduce using rule 36
	L_Id           reduce using rule 36
	%eof           reduce using rule 36


State 36

	RExp -> LExp .                                      (rule 37)
	LExp -> LExp . '[' RExp ']'                         (rule 49)

	'!'            reduce using rule 37
	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'['            shift, and enter state 75
			(reduce using rule 37)

	']'            reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'func'         reduce using rule 37
	'if'           reduce using rule 37
	'readChar'     reduce using rule 37
	'readFloat'    reduce using rule 37
	'readInt'      reduce using rule 37
	'readString'   reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'var'          reduce using rule 37
	'writeChar'    reduce using rule 37
	'writeFloat'   reduce using rule 37
	'writeInt'     reduce using rule 37
	'writeString'  reduce using rule 37
	'{'            reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37
	L_integ        reduce using rule 37
	L_doubl        reduce using rule 37
	L_charac       reduce using rule 37
	L_quoted       reduce using rule 37
	L_Id           reduce using rule 37
	%eof           reduce using rule 37


State 37

	Decl -> 'var' ListId '=' ListRExp .                 (rule 53)

	'!'            reduce using rule 53
	'&'            reduce using rule 53
	'('            reduce using rule 53
	'*'            reduce using rule 53
	'-'            reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'false'        reduce using rule 53
	'for'          reduce using rule 53
	'func'         reduce using rule 53
	'if'           reduce using rule 53
	'readChar'     reduce using rule 53
	'readFloat'    reduce using rule 53
	'readInt'      reduce using rule 53
	'readString'   reduce using rule 53
	'return'       reduce using rule 53
	'true'         reduce using rule 53
	'var'          reduce using rule 53
	'writeChar'    reduce using rule 53
	'writeFloat'   reduce using rule 53
	'writeInt'     reduce using rule 53
	'writeString'  reduce using rule 53
	'{'            reduce using rule 53
	'}'            reduce using rule 53
	L_integ        reduce using rule 53
	L_doubl        reduce using rule 53
	L_charac       reduce using rule 53
	L_quoted       reduce using rule 53
	L_Id           reduce using rule 53
	%eof           reduce using rule 53


State 38

	RExp -> '!' . RExp                                  (rule 20)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 74
	Val            goto state 35
	LExp           goto state 36

State 39

	RExp -> '&' . LExp                                  (rule 33)

	'*'            shift, and enter state 41
	L_Id           shift, and enter state 6

	Id             goto state 72
	LExp           goto state 73

State 40

	RExp -> '(' . RExp ')'                              (rule 38)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 71
	Val            goto state 35
	LExp           goto state 36

State 41

	LExp -> '*' . RExp                                  (rule 50)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 70
	Val            goto state 35
	LExp           goto state 36

State 42

	RExp -> '-' . RExp                                  (rule 32)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 69
	Val            goto state 35
	LExp           goto state 36

State 43

	Boolean -> 'false' .                                (rule 7)

	'!'            reduce using rule 7
	'!='           reduce using rule 7
	'%'            reduce using rule 7
	'&'            reduce using rule 7
	'&&'           reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	'*'            reduce using rule 7
	'+'            reduce using rule 7
	','            reduce using rule 7
	'-'            reduce using rule 7
	'/'            reduce using rule 7
	'<'            reduce using rule 7
	'<='           reduce using rule 7
	'='            reduce using rule 7
	'=='           reduce using rule 7
	'>'            reduce using rule 7
	'>='           reduce using rule 7
	'['            reduce using rule 7
	']'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'false'        reduce using rule 7
	'for'          reduce using rule 7
	'func'         reduce using rule 7
	'if'           reduce using rule 7
	'readChar'     reduce using rule 7
	'readFloat'    reduce using rule 7
	'readInt'      reduce using rule 7
	'readString'   reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'var'          reduce using rule 7
	'writeChar'    reduce using rule 7
	'writeFloat'   reduce using rule 7
	'writeInt'     reduce using rule 7
	'writeString'  reduce using rule 7
	'{'            reduce using rule 7
	'||'           reduce using rule 7
	'}'            reduce using rule 7
	L_integ        reduce using rule 7
	L_doubl        reduce using rule 7
	L_charac       reduce using rule 7
	L_quoted       reduce using rule 7
	L_Id           reduce using rule 7
	%eof           reduce using rule 7


State 44

	RExp -> 'readChar' . '(' ')'                        (rule 41)

	'('            shift, and enter state 68


State 45

	RExp -> 'readFloat' . '(' ')'                       (rule 40)

	'('            shift, and enter state 67


State 46

	RExp -> 'readInt' . '(' ')'                         (rule 39)

	'('            shift, and enter state 66


State 47

	RExp -> 'readString' . '(' ')'                      (rule 42)

	'('            shift, and enter state 65


State 48

	Boolean -> 'true' .                                 (rule 6)

	'!'            reduce using rule 6
	'!='           reduce using rule 6
	'%'            reduce using rule 6
	'&'            reduce using rule 6
	'&&'           reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	'*'            reduce using rule 6
	'+'            reduce using rule 6
	','            reduce using rule 6
	'-'            reduce using rule 6
	'/'            reduce using rule 6
	'<'            reduce using rule 6
	'<='           reduce using rule 6
	'='            reduce using rule 6
	'=='           reduce using rule 6
	'>'            reduce using rule 6
	'>='           reduce using rule 6
	'['            reduce using rule 6
	']'            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'false'        reduce using rule 6
	'for'          reduce using rule 6
	'func'         reduce using rule 6
	'if'           reduce using rule 6
	'readChar'     reduce using rule 6
	'readFloat'    reduce using rule 6
	'readInt'      reduce using rule 6
	'readString'   reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'var'          reduce using rule 6
	'writeChar'    reduce using rule 6
	'writeFloat'   reduce using rule 6
	'writeInt'     reduce using rule 6
	'writeString'  reduce using rule 6
	'{'            reduce using rule 6
	'||'           reduce using rule 6
	'}'            reduce using rule 6
	L_integ        reduce using rule 6
	L_doubl        reduce using rule 6
	L_charac       reduce using rule 6
	L_quoted       reduce using rule 6
	L_Id           reduce using rule 6
	%eof           reduce using rule 6


State 49

	Double -> L_doubl .                                 (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'break'        reduce using rule 2
	'continue'     reduce using rule 2
	'false'        reduce using rule 2
	'for'          reduce using rule 2
	'func'         reduce using rule 2
	'if'           reduce using rule 2
	'readChar'     reduce using rule 2
	'readFloat'    reduce using rule 2
	'readInt'      reduce using rule 2
	'readString'   reduce using rule 2
	'return'       reduce using rule 2
	'true'         reduce using rule 2
	'var'          reduce using rule 2
	'writeChar'    reduce using rule 2
	'writeFloat'   reduce using rule 2
	'writeInt'     reduce using rule 2
	'writeString'  reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	L_integ        reduce using rule 2
	L_doubl        reduce using rule 2
	L_charac       reduce using rule 2
	L_quoted       reduce using rule 2
	L_Id           reduce using rule 2
	%eof           reduce using rule 2


State 50

	Char -> L_charac .                                  (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'break'        reduce using rule 3
	'continue'     reduce using rule 3
	'false'        reduce using rule 3
	'for'          reduce using rule 3
	'func'         reduce using rule 3
	'if'           reduce using rule 3
	'readChar'     reduce using rule 3
	'readFloat'    reduce using rule 3
	'readInt'      reduce using rule 3
	'readString'   reduce using rule 3
	'return'       reduce using rule 3
	'true'         reduce using rule 3
	'var'          reduce using rule 3
	'writeChar'    reduce using rule 3
	'writeFloat'   reduce using rule 3
	'writeInt'     reduce using rule 3
	'writeString'  reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	L_integ        reduce using rule 3
	L_doubl        reduce using rule 3
	L_charac       reduce using rule 3
	L_quoted       reduce using rule 3
	L_Id           reduce using rule 3
	%eof           reduce using rule 3


State 51

	String -> L_quoted .                                (rule 4)

	'!'            reduce using rule 4
	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&'            reduce using rule 4
	'&&'           reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'break'        reduce using rule 4
	'continue'     reduce using rule 4
	'false'        reduce using rule 4
	'for'          reduce using rule 4
	'func'         reduce using rule 4
	'if'           reduce using rule 4
	'readChar'     reduce using rule 4
	'readFloat'    reduce using rule 4
	'readInt'      reduce using rule 4
	'readString'   reduce using rule 4
	'return'       reduce using rule 4
	'true'         reduce using rule 4
	'var'          reduce using rule 4
	'writeChar'    reduce using rule 4
	'writeFloat'   reduce using rule 4
	'writeInt'     reduce using rule 4
	'writeString'  reduce using rule 4
	'{'            reduce using rule 4
	'||'           reduce using rule 4
	'}'            reduce using rule 4
	L_integ        reduce using rule 4
	L_doubl        reduce using rule 4
	L_charac       reduce using rule 4
	L_quoted       reduce using rule 4
	L_Id           reduce using rule 4
	%eof           reduce using rule 4


State 52

	Type -> '*' Type .                                  (rule 15)

	'!'            reduce using rule 15
	'&'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	'*'            reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	'='            reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'func'         reduce using rule 15
	'if'           reduce using rule 15
	'readChar'     reduce using rule 15
	'readFloat'    reduce using rule 15
	'readInt'      reduce using rule 15
	'readString'   reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'var'          reduce using rule 15
	'writeChar'    reduce using rule 15
	'writeFloat'   reduce using rule 15
	'writeInt'     reduce using rule 15
	'writeString'  reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_integ        reduce using rule 15
	L_doubl        reduce using rule 15
	L_charac       reduce using rule 15
	L_quoted       reduce using rule 15
	L_Id           reduce using rule 15
	%eof           reduce using rule 15


State 53

	Decl -> 'var' ListId Type '=' . ListRExp            (rule 54)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 34
	Val            goto state 35
	LExp           goto state 36
	ListRExp       goto state 64

State 54

	Param -> Pass . ListId Type                         (rule 59)

	L_Id           shift, and enter state 6

	Id             goto state 11
	ListId         goto state 63

State 55

	ListParam -> Param .                                (rule 84)
	ListParam -> Param . ',' ListParam                  (rule 85)

	')'            reduce using rule 84
	','            shift, and enter state 62


State 56

	Param -> ListId . Type                              (rule 58)

	'*'            shift, and enter state 16
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 24

	Type           goto state 61

State 57

	Decl -> 'func' Id '(' ListParam . ')' Type Block    (rule 55)
	Decl -> 'func' Id '(' ListParam . ')' 'void' Block    (rule 56)

	')'            shift, and enter state 60


State 58

	Pass -> 'ref' .                                     (rule 17)

	L_Id           reduce using rule 17


State 59

	Pass -> 'val' .                                     (rule 16)

	L_Id           reduce using rule 16


State 60

	Decl -> 'func' Id '(' ListParam ')' . Type Block    (rule 55)
	Decl -> 'func' Id '(' ListParam ')' . 'void' Block    (rule 56)

	'*'            shift, and enter state 16
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 118

	Type           goto state 117

State 61

	Param -> ListId Type .                              (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58


State 62

	ListParam -> Param ',' . ListParam                  (rule 85)

	')'            reduce using rule 83
	'ref'          shift, and enter state 58
	'val'          shift, and enter state 59
	L_Id           shift, and enter state 6

	Id             goto state 11
	Pass           goto state 54
	Param          goto state 55
	ListId         goto state 56
	ListParam      goto state 116

State 63

	Param -> Pass ListId . Type                         (rule 59)

	'*'            shift, and enter state 16
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 24

	Type           goto state 115

State 64

	Decl -> 'var' ListId Type '=' ListRExp .            (rule 54)

	'!'            reduce using rule 54
	'&'            reduce using rule 54
	'('            reduce using rule 54
	'*'            reduce using rule 54
	'-'            reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'false'        reduce using rule 54
	'for'          reduce using rule 54
	'func'         reduce using rule 54
	'if'           reduce using rule 54
	'readChar'     reduce using rule 54
	'readFloat'    reduce using rule 54
	'readInt'      reduce using rule 54
	'readString'   reduce using rule 54
	'return'       reduce using rule 54
	'true'         reduce using rule 54
	'var'          reduce using rule 54
	'writeChar'    reduce using rule 54
	'writeFloat'   reduce using rule 54
	'writeInt'     reduce using rule 54
	'writeString'  reduce using rule 54
	'{'            reduce using rule 54
	'}'            reduce using rule 54
	L_integ        reduce using rule 54
	L_doubl        reduce using rule 54
	L_charac       reduce using rule 54
	L_quoted       reduce using rule 54
	L_Id           reduce using rule 54
	%eof           reduce using rule 54


State 65

	RExp -> 'readString' '(' . ')'                      (rule 42)

	')'            shift, and enter state 114


State 66

	RExp -> 'readInt' '(' . ')'                         (rule 39)

	')'            shift, and enter state 113


State 67

	RExp -> 'readFloat' '(' . ')'                       (rule 40)

	')'            shift, and enter state 112


State 68

	RExp -> 'readChar' '(' . ')'                        (rule 41)

	')'            shift, and enter state 111


State 69

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	RExp -> '-' RExp .                                  (rule 32)

	'!'            reduce using rule 32
	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'/'            reduce using rule 32
	'<'            reduce using rule 32
	'<='           reduce using rule 32
	'='            reduce using rule 32
	'=='           reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'func'         reduce using rule 32
	'if'           reduce using rule 32
	'readChar'     reduce using rule 32
	'readFloat'    reduce using rule 32
	'readInt'      reduce using rule 32
	'readString'   reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'var'          reduce using rule 32
	'writeChar'    reduce using rule 32
	'writeFloat'   reduce using rule 32
	'writeInt'     reduce using rule 32
	'writeString'  reduce using rule 32
	'{'            reduce using rule 32
	'||'           reduce using rule 32
	'}'            reduce using rule 32
	L_integ        reduce using rule 32
	L_doubl        reduce using rule 32
	L_charac       reduce using rule 32
	L_quoted       reduce using rule 32
	L_Id           reduce using rule 32
	%eof           reduce using rule 32


State 70

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	LExp -> '*' RExp .                                  (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            shift, and enter state 77
	'&'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 79
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 83
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'false'        reduce using rule 50
	'for'          reduce using rule 50
	'func'         reduce using rule 50
	'if'           reduce using rule 50
	'readChar'     reduce using rule 50
	'readFloat'    reduce using rule 50
	'readInt'      reduce using rule 50
	'readString'   reduce using rule 50
	'return'       reduce using rule 50
	'true'         reduce using rule 50
	'var'          reduce using rule 50
	'writeChar'    reduce using rule 50
	'writeFloat'   reduce using rule 50
	'writeInt'     reduce using rule 50
	'writeString'  reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50
	'}'            reduce using rule 50
	L_integ        reduce using rule 50
	L_doubl        reduce using rule 50
	L_charac       reduce using rule 50
	L_quoted       reduce using rule 50
	L_Id           reduce using rule 50
	%eof           reduce using rule 50


State 71

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	RExp -> '(' RExp . ')'                              (rule 38)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	')'            shift, and enter state 110
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'||'           shift, and enter state 89


State 72

	LExp -> Id .                                        (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'func'         reduce using rule 48
	'if'           reduce using rule 48
	'readChar'     reduce using rule 48
	'readFloat'    reduce using rule 48
	'readInt'      reduce using rule 48
	'readString'   reduce using rule 48
	'return'       reduce using rule 48
	'true'         reduce using rule 48
	'var'          reduce using rule 48
	'writeChar'    reduce using rule 48
	'writeFloat'   reduce using rule 48
	'writeInt'     reduce using rule 48
	'writeString'  reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_integ        reduce using rule 48
	L_doubl        reduce using rule 48
	L_charac       reduce using rule 48
	L_quoted       reduce using rule 48
	L_Id           reduce using rule 48
	%eof           reduce using rule 48


State 73

	RExp -> '&' LExp .                                  (rule 33)
	LExp -> LExp . '[' RExp ']'                         (rule 49)

	'!'            reduce using rule 33
	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&'            reduce using rule 33
	'&&'           reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'/'            reduce using rule 33
	'<'            reduce using rule 33
	'<='           reduce using rule 33
	'='            reduce using rule 33
	'=='           reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'['            shift, and enter state 75
	']'            reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'func'         reduce using rule 33
	'if'           reduce using rule 33
	'readChar'     reduce using rule 33
	'readFloat'    reduce using rule 33
	'readInt'      reduce using rule 33
	'readString'   reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'var'          reduce using rule 33
	'writeChar'    reduce using rule 33
	'writeFloat'   reduce using rule 33
	'writeInt'     reduce using rule 33
	'writeString'  reduce using rule 33
	'{'            reduce using rule 33
	'||'           reduce using rule 33
	'}'            reduce using rule 33
	L_integ        reduce using rule 33
	L_doubl        reduce using rule 33
	L_charac       reduce using rule 33
	L_quoted       reduce using rule 33
	L_Id           reduce using rule 33
	%eof           reduce using rule 33


State 74

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> '!' RExp .                                  (rule 20)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 20
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 20
	'&&'           reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 20
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 20
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 20
	']'            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'func'         reduce using rule 20
	'if'           reduce using rule 20
	'readChar'     reduce using rule 20
	'readFloat'    reduce using rule 20
	'readInt'      reduce using rule 20
	'readString'   reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'var'          reduce using rule 20
	'writeChar'    reduce using rule 20
	'writeFloat'   reduce using rule 20
	'writeInt'     reduce using rule 20
	'writeString'  reduce using rule 20
	'{'            reduce using rule 20
	'||'           reduce using rule 20
	'}'            reduce using rule 20
	L_integ        reduce using rule 20
	L_doubl        reduce using rule 20
	L_charac       reduce using rule 20
	L_quoted       reduce using rule 20
	L_Id           reduce using rule 20
	%eof           reduce using rule 20


State 75

	LExp -> LExp '[' . RExp ']'                         (rule 49)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 109
	Val            goto state 35
	LExp           goto state 36

State 76

	RExp -> RExp '!=' . RExp                            (rule 22)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 108
	Val            goto state 35
	LExp           goto state 36

State 77

	RExp -> RExp '%' . RExp                             (rule 31)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 107
	Val            goto state 35
	LExp           goto state 36

State 78

	RExp -> RExp '&&' . RExp                            (rule 18)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 106
	Val            goto state 35
	LExp           goto state 36

State 79

	RExp -> RExp '*' . RExp                             (rule 29)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 105
	Val            goto state 35
	LExp           goto state 36

State 80

	RExp -> RExp '+' . RExp                             (rule 27)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 104
	Val            goto state 35
	LExp           goto state 36

State 81

	ListRExp -> RExp ',' . ListRExp                     (rule 78)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 34
	Val            goto state 35
	LExp           goto state 36
	ListRExp       goto state 103

State 82

	RExp -> RExp '-' . RExp                             (rule 28)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 102
	Val            goto state 35
	LExp           goto state 36

State 83

	RExp -> RExp '/' . RExp                             (rule 30)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 101
	Val            goto state 35
	LExp           goto state 36

State 84

	RExp -> RExp '<' . RExp                             (rule 23)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 100
	Val            goto state 35
	LExp           goto state 36

State 85

	RExp -> RExp '<=' . RExp                            (rule 24)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 99
	Val            goto state 35
	LExp           goto state 36

State 86

	RExp -> RExp '==' . RExp                            (rule 21)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 98
	Val            goto state 35
	LExp           goto state 36

State 87

	RExp -> RExp '>' . RExp                             (rule 25)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 97
	Val            goto state 35
	LExp           goto state 36

State 88

	RExp -> RExp '>=' . RExp                            (rule 26)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 96
	Val            goto state 35
	LExp           goto state 36

State 89

	RExp -> RExp '||' . RExp                            (rule 19)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 95
	Val            goto state 35
	LExp           goto state 36

State 90

	RExp -> Id '(' . ')'                                (rule 34)
	RExp -> Id '(' . ListRExp ')'                       (rule 35)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	')'            shift, and enter state 94
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 34
	Val            goto state 35
	LExp           goto state 36
	ListRExp       goto state 93

State 91

	Type -> '[' Integer ']' . Type                      (rule 14)

	'*'            shift, and enter state 16
	'['            shift, and enter state 18
	'bool'         shift, and enter state 19
	'char'         shift, and enter state 20
	'float'        shift, and enter state 21
	'int'          shift, and enter state 22
	'string'       shift, and enter state 23
	'void'         shift, and enter state 24

	Type           goto state 92

State 92

	Type -> '[' Integer ']' Type .                      (rule 14)

	'!'            reduce using rule 14
	'&'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	'*'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	'='            reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'func'         reduce using rule 14
	'if'           reduce using rule 14
	'readChar'     reduce using rule 14
	'readFloat'    reduce using rule 14
	'readInt'      reduce using rule 14
	'readString'   reduce using rule 14
	'return'       reduce using rule 14
	'true'         reduce using rule 14
	'var'          reduce using rule 14
	'writeChar'    reduce using rule 14
	'writeFloat'   reduce using rule 14
	'writeInt'     reduce using rule 14
	'writeString'  reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_integ        reduce using rule 14
	L_doubl        reduce using rule 14
	L_charac       reduce using rule 14
	L_quoted       reduce using rule 14
	L_Id           reduce using rule 14
	%eof           reduce using rule 14


State 93

	RExp -> Id '(' ListRExp . ')'                       (rule 35)

	')'            shift, and enter state 123


State 94

	RExp -> Id '(' ')' .                                (rule 34)

	'!'            reduce using rule 34
	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'/'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'='            reduce using rule 34
	'=='           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'func'         reduce using rule 34
	'if'           reduce using rule 34
	'readChar'     reduce using rule 34
	'readFloat'    reduce using rule 34
	'readInt'      reduce using rule 34
	'readString'   reduce using rule 34
	'return'       reduce using rule 34
	'true'         reduce using rule 34
	'var'          reduce using rule 34
	'writeChar'    reduce using rule 34
	'writeFloat'   reduce using rule 34
	'writeInt'     reduce using rule 34
	'writeString'  reduce using rule 34
	'{'            reduce using rule 34
	'||'           reduce using rule 34
	'}'            reduce using rule 34
	L_integ        reduce using rule 34
	L_doubl        reduce using rule 34
	L_charac       reduce using rule 34
	L_quoted       reduce using rule 34
	L_Id           reduce using rule 34
	%eof           reduce using rule 34


State 95

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp '||' RExp .                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 19
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 19
	'&&'           reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 19
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'='            reduce using rule 19
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'['            reduce using rule 19
	']'            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'func'         reduce using rule 19
	'if'           reduce using rule 19
	'readChar'     reduce using rule 19
	'readFloat'    reduce using rule 19
	'readInt'      reduce using rule 19
	'readString'   reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'var'          reduce using rule 19
	'writeChar'    reduce using rule 19
	'writeFloat'   reduce using rule 19
	'writeInt'     reduce using rule 19
	'writeString'  reduce using rule 19
	'{'            reduce using rule 19
	'||'           reduce using rule 19
	'}'            reduce using rule 19
	L_integ        reduce using rule 19
	L_doubl        reduce using rule 19
	L_charac       reduce using rule 19
	L_quoted       reduce using rule 19
	L_Id           reduce using rule 19
	%eof           reduce using rule 19


State 96

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp '>=' RExp .                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 26
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 26
	'&&'           reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 26
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 26
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 26
	']'            reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'func'         reduce using rule 26
	'if'           reduce using rule 26
	'readChar'     reduce using rule 26
	'readFloat'    reduce using rule 26
	'readInt'      reduce using rule 26
	'readString'   reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'writeChar'    reduce using rule 26
	'writeFloat'   reduce using rule 26
	'writeInt'     reduce using rule 26
	'writeString'  reduce using rule 26
	'{'            reduce using rule 26
	'||'           reduce using rule 26
	'}'            reduce using rule 26
	L_integ        reduce using rule 26
	L_doubl        reduce using rule 26
	L_charac       reduce using rule 26
	L_quoted       reduce using rule 26
	L_Id           reduce using rule 26
	%eof           reduce using rule 26


State 97

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp '>' RExp .                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 25
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 25
	'&&'           reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 25
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 25
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 25
	']'            reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'func'         reduce using rule 25
	'if'           reduce using rule 25
	'readChar'     reduce using rule 25
	'readFloat'    reduce using rule 25
	'readInt'      reduce using rule 25
	'readString'   reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'writeChar'    reduce using rule 25
	'writeFloat'   reduce using rule 25
	'writeInt'     reduce using rule 25
	'writeString'  reduce using rule 25
	'{'            reduce using rule 25
	'||'           reduce using rule 25
	'}'            reduce using rule 25
	L_integ        reduce using rule 25
	L_doubl        reduce using rule 25
	L_charac       reduce using rule 25
	L_quoted       reduce using rule 25
	L_Id           reduce using rule 25
	%eof           reduce using rule 25


State 98

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp '==' RExp .                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 21
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 21
	'&&'           reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 21
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 21
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 21
	']'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'func'         reduce using rule 21
	'if'           reduce using rule 21
	'readChar'     reduce using rule 21
	'readFloat'    reduce using rule 21
	'readInt'      reduce using rule 21
	'readString'   reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'var'          reduce using rule 21
	'writeChar'    reduce using rule 21
	'writeFloat'   reduce using rule 21
	'writeInt'     reduce using rule 21
	'writeString'  reduce using rule 21
	'{'            reduce using rule 21
	'||'           reduce using rule 21
	'}'            reduce using rule 21
	L_integ        reduce using rule 21
	L_doubl        reduce using rule 21
	L_charac       reduce using rule 21
	L_quoted       reduce using rule 21
	L_Id           reduce using rule 21
	%eof           reduce using rule 21


State 99

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp '<=' RExp .                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 24
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 24
	'&&'           reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 24
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 24
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 24
	']'            reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'func'         reduce using rule 24
	'if'           reduce using rule 24
	'readChar'     reduce using rule 24
	'readFloat'    reduce using rule 24
	'readInt'      reduce using rule 24
	'readString'   reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'writeChar'    reduce using rule 24
	'writeFloat'   reduce using rule 24
	'writeInt'     reduce using rule 24
	'writeString'  reduce using rule 24
	'{'            reduce using rule 24
	'||'           reduce using rule 24
	'}'            reduce using rule 24
	L_integ        reduce using rule 24
	L_doubl        reduce using rule 24
	L_charac       reduce using rule 24
	L_quoted       reduce using rule 24
	L_Id           reduce using rule 24
	%eof           reduce using rule 24


State 100

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp '<' RExp .                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 23
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 23
	'&&'           reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 23
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 23
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 23
	']'            reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'func'         reduce using rule 23
	'if'           reduce using rule 23
	'readChar'     reduce using rule 23
	'readFloat'    reduce using rule 23
	'readInt'      reduce using rule 23
	'readString'   reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'writeChar'    reduce using rule 23
	'writeFloat'   reduce using rule 23
	'writeInt'     reduce using rule 23
	'writeString'  reduce using rule 23
	'{'            reduce using rule 23
	'||'           reduce using rule 23
	'}'            reduce using rule 23
	L_integ        reduce using rule 23
	L_doubl        reduce using rule 23
	L_charac       reduce using rule 23
	L_quoted       reduce using rule 23
	L_Id           reduce using rule 23
	%eof           reduce using rule 23


State 101

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp '/' RExp .                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 30
	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&'            reduce using rule 30
	'&&'           reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'/'            reduce using rule 30
	'<'            reduce using rule 30
	'<='           reduce using rule 30
	'='            reduce using rule 30
	'=='           reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'func'         reduce using rule 30
	'if'           reduce using rule 30
	'readChar'     reduce using rule 30
	'readFloat'    reduce using rule 30
	'readInt'      reduce using rule 30
	'readString'   reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'var'          reduce using rule 30
	'writeChar'    reduce using rule 30
	'writeFloat'   reduce using rule 30
	'writeInt'     reduce using rule 30
	'writeString'  reduce using rule 30
	'{'            reduce using rule 30
	'||'           reduce using rule 30
	'}'            reduce using rule 30
	L_integ        reduce using rule 30
	L_doubl        reduce using rule 30
	L_charac       reduce using rule 30
	L_quoted       reduce using rule 30
	L_Id           reduce using rule 30
	%eof           reduce using rule 30


State 102

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp '-' RExp .                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 28
	'!='           reduce using rule 28
	'%'            shift, and enter state 77
	'&'            reduce using rule 28
	'&&'           reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            shift, and enter state 79
	'+'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'/'            shift, and enter state 83
	'<'            reduce using rule 28
	'<='           reduce using rule 28
	'='            reduce using rule 28
	'=='           reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'func'         reduce using rule 28
	'if'           reduce using rule 28
	'readChar'     reduce using rule 28
	'readFloat'    reduce using rule 28
	'readInt'      reduce using rule 28
	'readString'   reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'var'          reduce using rule 28
	'writeChar'    reduce using rule 28
	'writeFloat'   reduce using rule 28
	'writeInt'     reduce using rule 28
	'writeString'  reduce using rule 28
	'{'            reduce using rule 28
	'||'           reduce using rule 28
	'}'            reduce using rule 28
	L_integ        reduce using rule 28
	L_doubl        reduce using rule 28
	L_charac       reduce using rule 28
	L_quoted       reduce using rule 28
	L_Id           reduce using rule 28
	%eof           reduce using rule 28


State 103

	ListRExp -> RExp ',' ListRExp .                     (rule 78)

	'!'            reduce using rule 78
	'&'            reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'-'            reduce using rule 78
	'break'        reduce using rule 78
	'continue'     reduce using rule 78
	'false'        reduce using rule 78
	'for'          reduce using rule 78
	'func'         reduce using rule 78
	'if'           reduce using rule 78
	'readChar'     reduce using rule 78
	'readFloat'    reduce using rule 78
	'readInt'      reduce using rule 78
	'readString'   reduce using rule 78
	'return'       reduce using rule 78
	'true'         reduce using rule 78
	'var'          reduce using rule 78
	'writeChar'    reduce using rule 78
	'writeFloat'   reduce using rule 78
	'writeInt'     reduce using rule 78
	'writeString'  reduce using rule 78
	'{'            reduce using rule 78
	'}'            reduce using rule 78
	L_integ        reduce using rule 78
	L_doubl        reduce using rule 78
	L_charac       reduce using rule 78
	L_quoted       reduce using rule 78
	L_Id           reduce using rule 78
	%eof           reduce using rule 78


State 104

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp '+' RExp .                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 27
	'!='           reduce using rule 27
	'%'            shift, and enter state 77
	'&'            reduce using rule 27
	'&&'           reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'*'            shift, and enter state 79
	'+'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'/'            shift, and enter state 83
	'<'            reduce using rule 27
	'<='           reduce using rule 27
	'='            reduce using rule 27
	'=='           reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'func'         reduce using rule 27
	'if'           reduce using rule 27
	'readChar'     reduce using rule 27
	'readFloat'    reduce using rule 27
	'readInt'      reduce using rule 27
	'readString'   reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          reduce using rule 27
	'writeChar'    reduce using rule 27
	'writeFloat'   reduce using rule 27
	'writeInt'     reduce using rule 27
	'writeString'  reduce using rule 27
	'{'            reduce using rule 27
	'||'           reduce using rule 27
	'}'            reduce using rule 27
	L_integ        reduce using rule 27
	L_doubl        reduce using rule 27
	L_charac       reduce using rule 27
	L_quoted       reduce using rule 27
	L_Id           reduce using rule 27
	%eof           reduce using rule 27


State 105

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp '*' RExp .                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 29
	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&'            reduce using rule 29
	'&&'           reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'/'            reduce using rule 29
	'<'            reduce using rule 29
	'<='           reduce using rule 29
	'='            reduce using rule 29
	'=='           reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'func'         reduce using rule 29
	'if'           reduce using rule 29
	'readChar'     reduce using rule 29
	'readFloat'    reduce using rule 29
	'readInt'      reduce using rule 29
	'readString'   reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'var'          reduce using rule 29
	'writeChar'    reduce using rule 29
	'writeFloat'   reduce using rule 29
	'writeInt'     reduce using rule 29
	'writeString'  reduce using rule 29
	'{'            reduce using rule 29
	'||'           reduce using rule 29
	'}'            reduce using rule 29
	L_integ        reduce using rule 29
	L_doubl        reduce using rule 29
	L_charac       reduce using rule 29
	L_quoted       reduce using rule 29
	L_Id           reduce using rule 29
	%eof           reduce using rule 29


State 106

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp '&&' RExp .                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 18
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 18
	'&&'           reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 18
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'='            reduce using rule 18
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'['            reduce using rule 18
	']'            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'func'         reduce using rule 18
	'if'           reduce using rule 18
	'readChar'     reduce using rule 18
	'readFloat'    reduce using rule 18
	'readInt'      reduce using rule 18
	'readString'   reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'var'          reduce using rule 18
	'writeChar'    reduce using rule 18
	'writeFloat'   reduce using rule 18
	'writeInt'     reduce using rule 18
	'writeString'  reduce using rule 18
	'{'            reduce using rule 18
	'||'           reduce using rule 18
	'}'            reduce using rule 18
	L_integ        reduce using rule 18
	L_doubl        reduce using rule 18
	L_charac       reduce using rule 18
	L_quoted       reduce using rule 18
	L_Id           reduce using rule 18
	%eof           reduce using rule 18


State 107

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	RExp -> RExp '%' RExp .                             (rule 31)

	'!'            reduce using rule 31
	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&'            reduce using rule 31
	'&&'           reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'/'            reduce using rule 31
	'<'            reduce using rule 31
	'<='           reduce using rule 31
	'='            reduce using rule 31
	'=='           reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'func'         reduce using rule 31
	'if'           reduce using rule 31
	'readChar'     reduce using rule 31
	'readFloat'    reduce using rule 31
	'readInt'      reduce using rule 31
	'readString'   reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'var'          reduce using rule 31
	'writeChar'    reduce using rule 31
	'writeFloat'   reduce using rule 31
	'writeInt'     reduce using rule 31
	'writeString'  reduce using rule 31
	'{'            reduce using rule 31
	'||'           reduce using rule 31
	'}'            reduce using rule 31
	L_integ        reduce using rule 31
	L_doubl        reduce using rule 31
	L_charac       reduce using rule 31
	L_quoted       reduce using rule 31
	L_Id           reduce using rule 31
	%eof           reduce using rule 31


State 108

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp '!=' RExp .                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)

	'!'            reduce using rule 22
	'!='           fail
	'%'            shift, and enter state 77
	'&'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	','            reduce using rule 22
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            fail
	'<='           fail
	'='            reduce using rule 22
	'=='           fail
	'>'            fail
	'>='           fail
	'['            reduce using rule 22
	']'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'func'         reduce using rule 22
	'if'           reduce using rule 22
	'readChar'     reduce using rule 22
	'readFloat'    reduce using rule 22
	'readInt'      reduce using rule 22
	'readString'   reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'writeChar'    reduce using rule 22
	'writeFloat'   reduce using rule 22
	'writeInt'     reduce using rule 22
	'writeString'  reduce using rule 22
	'{'            reduce using rule 22
	'||'           reduce using rule 22
	'}'            reduce using rule 22
	L_integ        reduce using rule 22
	L_doubl        reduce using rule 22
	L_charac       reduce using rule 22
	L_quoted       reduce using rule 22
	L_Id           reduce using rule 22
	%eof           reduce using rule 22


State 109

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	LExp -> LExp '[' RExp . ']'                         (rule 49)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	']'            shift, and enter state 122
	'||'           shift, and enter state 89


State 110

	RExp -> '(' RExp ')' .                              (rule 38)

	'!'            reduce using rule 38
	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'func'         reduce using rule 38
	'if'           reduce using rule 38
	'readChar'     reduce using rule 38
	'readFloat'    reduce using rule 38
	'readInt'      reduce using rule 38
	'readString'   reduce using rule 38
	'return'       reduce using rule 38
	'true'         reduce using rule 38
	'var'          reduce using rule 38
	'writeChar'    reduce using rule 38
	'writeFloat'   reduce using rule 38
	'writeInt'     reduce using rule 38
	'writeString'  reduce using rule 38
	'{'            reduce using rule 38
	'||'           reduce using rule 38
	'}'            reduce using rule 38
	L_integ        reduce using rule 38
	L_doubl        reduce using rule 38
	L_charac       reduce using rule 38
	L_quoted       reduce using rule 38
	L_Id           reduce using rule 38
	%eof           reduce using rule 38


State 111

	RExp -> 'readChar' '(' ')' .                        (rule 41)

	'!'            reduce using rule 41
	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'func'         reduce using rule 41
	'if'           reduce using rule 41
	'readChar'     reduce using rule 41
	'readFloat'    reduce using rule 41
	'readInt'      reduce using rule 41
	'readString'   reduce using rule 41
	'return'       reduce using rule 41
	'true'         reduce using rule 41
	'var'          reduce using rule 41
	'writeChar'    reduce using rule 41
	'writeFloat'   reduce using rule 41
	'writeInt'     reduce using rule 41
	'writeString'  reduce using rule 41
	'{'            reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	L_integ        reduce using rule 41
	L_doubl        reduce using rule 41
	L_charac       reduce using rule 41
	L_quoted       reduce using rule 41
	L_Id           reduce using rule 41
	%eof           reduce using rule 41


State 112

	RExp -> 'readFloat' '(' ')' .                       (rule 40)

	'!'            reduce using rule 40
	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'func'         reduce using rule 40
	'if'           reduce using rule 40
	'readChar'     reduce using rule 40
	'readFloat'    reduce using rule 40
	'readInt'      reduce using rule 40
	'readString'   reduce using rule 40
	'return'       reduce using rule 40
	'true'         reduce using rule 40
	'var'          reduce using rule 40
	'writeChar'    reduce using rule 40
	'writeFloat'   reduce using rule 40
	'writeInt'     reduce using rule 40
	'writeString'  reduce using rule 40
	'{'            reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40
	L_integ        reduce using rule 40
	L_doubl        reduce using rule 40
	L_charac       reduce using rule 40
	L_quoted       reduce using rule 40
	L_Id           reduce using rule 40
	%eof           reduce using rule 40


State 113

	RExp -> 'readInt' '(' ')' .                         (rule 39)

	'!'            reduce using rule 39
	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'func'         reduce using rule 39
	'if'           reduce using rule 39
	'readChar'     reduce using rule 39
	'readFloat'    reduce using rule 39
	'readInt'      reduce using rule 39
	'readString'   reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'var'          reduce using rule 39
	'writeChar'    reduce using rule 39
	'writeFloat'   reduce using rule 39
	'writeInt'     reduce using rule 39
	'writeString'  reduce using rule 39
	'{'            reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	L_integ        reduce using rule 39
	L_doubl        reduce using rule 39
	L_charac       reduce using rule 39
	L_quoted       reduce using rule 39
	L_Id           reduce using rule 39
	%eof           reduce using rule 39


State 114

	RExp -> 'readString' '(' ')' .                      (rule 42)

	'!'            reduce using rule 42
	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'func'         reduce using rule 42
	'if'           reduce using rule 42
	'readChar'     reduce using rule 42
	'readFloat'    reduce using rule 42
	'readInt'      reduce using rule 42
	'readString'   reduce using rule 42
	'return'       reduce using rule 42
	'true'         reduce using rule 42
	'var'          reduce using rule 42
	'writeChar'    reduce using rule 42
	'writeFloat'   reduce using rule 42
	'writeInt'     reduce using rule 42
	'writeString'  reduce using rule 42
	'{'            reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	L_integ        reduce using rule 42
	L_doubl        reduce using rule 42
	L_charac       reduce using rule 42
	L_quoted       reduce using rule 42
	L_Id           reduce using rule 42
	%eof           reduce using rule 42


State 115

	Param -> Pass ListId Type .                         (rule 59)

	')'            reduce using rule 59
	','            reduce using rule 59


State 116

	ListParam -> Param ',' ListParam .                  (rule 85)

	')'            reduce using rule 85


State 117

	Decl -> 'func' Id '(' ListParam ')' Type . Block    (rule 55)

	'{'            shift, and enter state 120

	Block          goto state 121

State 118

	Type -> 'void' .                                    (rule 8)
	Decl -> 'func' Id '(' ListParam ')' 'void' . Block    (rule 56)

	'{'            shift, and enter state 120
			(reduce using rule 8)


	Block          goto state 119

State 119

	Decl -> 'func' Id '(' ListParam ')' 'void' Block .    (rule 56)

	'!'            reduce using rule 56
	'&'            reduce using rule 56
	'('            reduce using rule 56
	'*'            reduce using rule 56
	'-'            reduce using rule 56
	'break'        reduce using rule 56
	'continue'     reduce using rule 56
	'false'        reduce using rule 56
	'for'          reduce using rule 56
	'func'         reduce using rule 56
	'if'           reduce using rule 56
	'readChar'     reduce using rule 56
	'readFloat'    reduce using rule 56
	'readInt'      reduce using rule 56
	'readString'   reduce using rule 56
	'return'       reduce using rule 56
	'true'         reduce using rule 56
	'var'          reduce using rule 56
	'writeChar'    reduce using rule 56
	'writeFloat'   reduce using rule 56
	'writeInt'     reduce using rule 56
	'writeString'  reduce using rule 56
	'{'            reduce using rule 56
	'}'            reduce using rule 56
	L_integ        reduce using rule 56
	L_doubl        reduce using rule 56
	L_charac       reduce using rule 56
	L_quoted       reduce using rule 56
	L_Id           reduce using rule 56
	%eof           reduce using rule 56


State 120

	Block -> '{' . ListStmt '}'                         (rule 60)

	'!'            reduce using rule 86
	'&'            reduce using rule 86
	'('            reduce using rule 86
	'*'            reduce using rule 86
	'-'            reduce using rule 86
	'break'        reduce using rule 86
	'continue'     reduce using rule 86
	'false'        reduce using rule 86
	'for'          reduce using rule 86
	'func'         reduce using rule 86
	'if'           reduce using rule 86
	'readChar'     reduce using rule 86
	'readFloat'    reduce using rule 86
	'readInt'      reduce using rule 86
	'readString'   reduce using rule 86
	'return'       reduce using rule 86
	'true'         reduce using rule 86
	'var'          reduce using rule 86
	'writeChar'    reduce using rule 86
	'writeFloat'   reduce using rule 86
	'writeInt'     reduce using rule 86
	'writeString'  reduce using rule 86
	'{'            reduce using rule 86
	'}'            reduce using rule 86
	L_integ        reduce using rule 86
	L_doubl        reduce using rule 86
	L_charac       reduce using rule 86
	L_quoted       reduce using rule 86
	L_Id           reduce using rule 86

	ListStmt       goto state 124

State 121

	Decl -> 'func' Id '(' ListParam ')' Type Block .    (rule 55)

	'!'            reduce using rule 55
	'&'            reduce using rule 55
	'('            reduce using rule 55
	'*'            reduce using rule 55
	'-'            reduce using rule 55
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'false'        reduce using rule 55
	'for'          reduce using rule 55
	'func'         reduce using rule 55
	'if'           reduce using rule 55
	'readChar'     reduce using rule 55
	'readFloat'    reduce using rule 55
	'readInt'      reduce using rule 55
	'readString'   reduce using rule 55
	'return'       reduce using rule 55
	'true'         reduce using rule 55
	'var'          reduce using rule 55
	'writeChar'    reduce using rule 55
	'writeFloat'   reduce using rule 55
	'writeInt'     reduce using rule 55
	'writeString'  reduce using rule 55
	'{'            reduce using rule 55
	'}'            reduce using rule 55
	L_integ        reduce using rule 55
	L_doubl        reduce using rule 55
	L_charac       reduce using rule 55
	L_quoted       reduce using rule 55
	L_Id           reduce using rule 55
	%eof           reduce using rule 55


State 122

	LExp -> LExp '[' RExp ']' .                         (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'false'        reduce using rule 49
	'for'          reduce using rule 49
	'func'         reduce using rule 49
	'if'           reduce using rule 49
	'readChar'     reduce using rule 49
	'readFloat'    reduce using rule 49
	'readInt'      reduce using rule 49
	'readString'   reduce using rule 49
	'return'       reduce using rule 49
	'true'         reduce using rule 49
	'var'          reduce using rule 49
	'writeChar'    reduce using rule 49
	'writeFloat'   reduce using rule 49
	'writeInt'     reduce using rule 49
	'writeString'  reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49
	'}'            reduce using rule 49
	L_integ        reduce using rule 49
	L_doubl        reduce using rule 49
	L_charac       reduce using rule 49
	L_quoted       reduce using rule 49
	L_Id           reduce using rule 49
	%eof           reduce using rule 49


State 123

	RExp -> Id '(' ListRExp ')' .                       (rule 35)

	'!'            reduce using rule 35
	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'/'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'='            reduce using rule 35
	'=='           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'break'        reduce using rule 35
	'continue'     reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'func'         reduce using rule 35
	'if'           reduce using rule 35
	'readChar'     reduce using rule 35
	'readFloat'    reduce using rule 35
	'readInt'      reduce using rule 35
	'readString'   reduce using rule 35
	'return'       reduce using rule 35
	'true'         reduce using rule 35
	'var'          reduce using rule 35
	'writeChar'    reduce using rule 35
	'writeFloat'   reduce using rule 35
	'writeInt'     reduce using rule 35
	'writeString'  reduce using rule 35
	'{'            reduce using rule 35
	'||'           reduce using rule 35
	'}'            reduce using rule 35
	L_integ        reduce using rule 35
	L_doubl        reduce using rule 35
	L_charac       reduce using rule 35
	L_quoted       reduce using rule 35
	L_Id           reduce using rule 35
	%eof           reduce using rule 35


State 124

	Block -> '{' ListStmt . '}'                         (rule 60)
	ListStmt -> ListStmt . Stmt                         (rule 87)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'break'        shift, and enter state 134
	'continue'     shift, and enter state 135
	'false'        shift, and enter state 43
	'for'          shift, and enter state 136
	'func'         shift, and enter state 9
	'if'           shift, and enter state 137
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'return'       shift, and enter state 138
	'true'         shift, and enter state 48
	'var'          shift, and enter state 10
	'writeChar'    shift, and enter state 139
	'writeFloat'   shift, and enter state 140
	'writeInt'     shift, and enter state 141
	'writeString'  shift, and enter state 142
	'{'            shift, and enter state 120
	'}'            shift, and enter state 143
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 125
	Boolean        goto state 33
	RExp           goto state 126
	Val            goto state 35
	LExp           goto state 127
	Decl           goto state 128
	ShortVarDecl   goto state 129
	Block          goto state 130
	Stmt           goto state 131
	StmtSmpl       goto state 132
	ListId         goto state 133

State 125

	RExp -> Id . '(' ')'                                (rule 34)
	RExp -> Id . '(' ListRExp ')'                       (rule 35)
	LExp -> Id .                                        (rule 48)
	ListId -> Id .                                      (rule 81)
	ListId -> Id . ',' ListId                           (rule 82)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 90
			(reduce using rule 48)

	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            shift, and enter state 25
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	':='           reduce using rule 81
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'func'         reduce using rule 48
	'if'           reduce using rule 48
	'readChar'     reduce using rule 48
	'readFloat'    reduce using rule 48
	'readInt'      reduce using rule 48
	'readString'   reduce using rule 48
	'return'       reduce using rule 48
	'true'         reduce using rule 48
	'var'          reduce using rule 48
	'writeChar'    reduce using rule 48
	'writeFloat'   reduce using rule 48
	'writeInt'     reduce using rule 48
	'writeString'  reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_integ        reduce using rule 48
	L_doubl        reduce using rule 48
	L_charac       reduce using rule 48
	L_quoted       reduce using rule 48
	L_Id           reduce using rule 48


State 126

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	StmtSmpl -> RExp .                                  (rule 75)

	'!'            reduce using rule 75
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 75
	'&&'           shift, and enter state 78
	'('            reduce using rule 75
	'*'            shift, and enter state 79
			(reduce using rule 75)

	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
			(reduce using rule 75)

	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'break'        reduce using rule 75
	'continue'     reduce using rule 75
	'false'        reduce using rule 75
	'for'          reduce using rule 75
	'func'         reduce using rule 75
	'if'           reduce using rule 75
	'readChar'     reduce using rule 75
	'readFloat'    reduce using rule 75
	'readInt'      reduce using rule 75
	'readString'   reduce using rule 75
	'return'       reduce using rule 75
	'true'         reduce using rule 75
	'var'          reduce using rule 75
	'writeChar'    reduce using rule 75
	'writeFloat'   reduce using rule 75
	'writeInt'     reduce using rule 75
	'writeString'  reduce using rule 75
	'{'            reduce using rule 75
	'||'           shift, and enter state 89
	'}'            reduce using rule 75
	L_integ        reduce using rule 75
	L_doubl        reduce using rule 75
	L_charac       reduce using rule 75
	L_quoted       reduce using rule 75
	L_Id           reduce using rule 75


State 127

	RExp -> LExp .                                      (rule 37)
	LExp -> LExp . '[' RExp ']'                         (rule 49)
	StmtSmpl -> LExp . '=' RExp                         (rule 76)

	'!'            reduce using rule 37
	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'/'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            shift, and enter state 152
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'['            shift, and enter state 75
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'func'         reduce using rule 37
	'if'           reduce using rule 37
	'readChar'     reduce using rule 37
	'readFloat'    reduce using rule 37
	'readInt'      reduce using rule 37
	'readString'   reduce using rule 37
	'return'       reduce using rule 37
	'true'         reduce using rule 37
	'var'          reduce using rule 37
	'writeChar'    reduce using rule 37
	'writeFloat'   reduce using rule 37
	'writeInt'     reduce using rule 37
	'writeString'  reduce using rule 37
	'{'            reduce using rule 37
	'||'           reduce using rule 37
	'}'            reduce using rule 37
	L_integ        reduce using rule 37
	L_doubl        reduce using rule 37
	L_charac       reduce using rule 37
	L_quoted       reduce using rule 37
	L_Id           reduce using rule 37


State 128

	Stmt -> Decl .                                      (rule 61)

	'!'            reduce using rule 61
	'&'            reduce using rule 61
	'('            reduce using rule 61
	'*'            reduce using rule 61
	'-'            reduce using rule 61
	'break'        reduce using rule 61
	'continue'     reduce using rule 61
	'false'        reduce using rule 61
	'for'          reduce using rule 61
	'func'         reduce using rule 61
	'if'           reduce using rule 61
	'readChar'     reduce using rule 61
	'readFloat'    reduce using rule 61
	'readInt'      reduce using rule 61
	'readString'   reduce using rule 61
	'return'       reduce using rule 61
	'true'         reduce using rule 61
	'var'          reduce using rule 61
	'writeChar'    reduce using rule 61
	'writeFloat'   reduce using rule 61
	'writeInt'     reduce using rule 61
	'writeString'  reduce using rule 61
	'{'            reduce using rule 61
	'}'            reduce using rule 61
	L_integ        reduce using rule 61
	L_doubl        reduce using rule 61
	L_charac       reduce using rule 61
	L_quoted       reduce using rule 61
	L_Id           reduce using rule 61


State 129

	StmtSmpl -> ShortVarDecl .                          (rule 74)

	'!'            reduce using rule 74
	'&'            reduce using rule 74
	'('            reduce using rule 74
	'*'            reduce using rule 74
	'-'            reduce using rule 74
	'break'        reduce using rule 74
	'continue'     reduce using rule 74
	'false'        reduce using rule 74
	'for'          reduce using rule 74
	'func'         reduce using rule 74
	'if'           reduce using rule 74
	'readChar'     reduce using rule 74
	'readFloat'    reduce using rule 74
	'readInt'      reduce using rule 74
	'readString'   reduce using rule 74
	'return'       reduce using rule 74
	'true'         reduce using rule 74
	'var'          reduce using rule 74
	'writeChar'    reduce using rule 74
	'writeFloat'   reduce using rule 74
	'writeInt'     reduce using rule 74
	'writeString'  reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	L_integ        reduce using rule 74
	L_doubl        reduce using rule 74
	L_charac       reduce using rule 74
	L_quoted       reduce using rule 74
	L_Id           reduce using rule 74


State 130

	Stmt -> Block .                                     (rule 62)

	'!'            reduce using rule 62
	'&'            reduce using rule 62
	'('            reduce using rule 62
	'*'            reduce using rule 62
	'-'            reduce using rule 62
	'break'        reduce using rule 62
	'continue'     reduce using rule 62
	'false'        reduce using rule 62
	'for'          reduce using rule 62
	'func'         reduce using rule 62
	'if'           reduce using rule 62
	'readChar'     reduce using rule 62
	'readFloat'    reduce using rule 62
	'readInt'      reduce using rule 62
	'readString'   reduce using rule 62
	'return'       reduce using rule 62
	'true'         reduce using rule 62
	'var'          reduce using rule 62
	'writeChar'    reduce using rule 62
	'writeFloat'   reduce using rule 62
	'writeInt'     reduce using rule 62
	'writeString'  reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	L_integ        reduce using rule 62
	L_doubl        reduce using rule 62
	L_charac       reduce using rule 62
	L_quoted       reduce using rule 62
	L_Id           reduce using rule 62


State 131

	ListStmt -> ListStmt Stmt .                         (rule 87)

	'!'            reduce using rule 87
	'&'            reduce using rule 87
	'('            reduce using rule 87
	'*'            reduce using rule 87
	'-'            reduce using rule 87
	'break'        reduce using rule 87
	'continue'     reduce using rule 87
	'false'        reduce using rule 87
	'for'          reduce using rule 87
	'func'         reduce using rule 87
	'if'           reduce using rule 87
	'readChar'     reduce using rule 87
	'readFloat'    reduce using rule 87
	'readInt'      reduce using rule 87
	'readString'   reduce using rule 87
	'return'       reduce using rule 87
	'true'         reduce using rule 87
	'var'          reduce using rule 87
	'writeChar'    reduce using rule 87
	'writeFloat'   reduce using rule 87
	'writeInt'     reduce using rule 87
	'writeString'  reduce using rule 87
	'{'            reduce using rule 87
	'}'            reduce using rule 87
	L_integ        reduce using rule 87
	L_doubl        reduce using rule 87
	L_charac       reduce using rule 87
	L_quoted       reduce using rule 87
	L_Id           reduce using rule 87


State 132

	Stmt -> StmtSmpl .                                  (rule 63)

	'!'            reduce using rule 63
	'&'            reduce using rule 63
	'('            reduce using rule 63
	'*'            reduce using rule 63
	'-'            reduce using rule 63
	'break'        reduce using rule 63
	'continue'     reduce using rule 63
	'false'        reduce using rule 63
	'for'          reduce using rule 63
	'func'         reduce using rule 63
	'if'           reduce using rule 63
	'readChar'     reduce using rule 63
	'readFloat'    reduce using rule 63
	'readInt'      reduce using rule 63
	'readString'   reduce using rule 63
	'return'       reduce using rule 63
	'true'         reduce using rule 63
	'var'          reduce using rule 63
	'writeChar'    reduce using rule 63
	'writeFloat'   reduce using rule 63
	'writeInt'     reduce using rule 63
	'writeString'  reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	L_integ        reduce using rule 63
	L_doubl        reduce using rule 63
	L_charac       reduce using rule 63
	L_quoted       reduce using rule 63
	L_Id           reduce using rule 63


State 133

	ShortVarDecl -> ListId . ':=' ListRExp              (rule 57)

	':='           shift, and enter state 151


State 134

	Stmt -> 'break' .                                   (rule 67)

	'!'            reduce using rule 67
	'&'            reduce using rule 67
	'('            reduce using rule 67
	'*'            reduce using rule 67
	'-'            reduce using rule 67
	'break'        reduce using rule 67
	'continue'     reduce using rule 67
	'false'        reduce using rule 67
	'for'          reduce using rule 67
	'func'         reduce using rule 67
	'if'           reduce using rule 67
	'readChar'     reduce using rule 67
	'readFloat'    reduce using rule 67
	'readInt'      reduce using rule 67
	'readString'   reduce using rule 67
	'return'       reduce using rule 67
	'true'         reduce using rule 67
	'var'          reduce using rule 67
	'writeChar'    reduce using rule 67
	'writeFloat'   reduce using rule 67
	'writeInt'     reduce using rule 67
	'writeString'  reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	L_integ        reduce using rule 67
	L_doubl        reduce using rule 67
	L_charac       reduce using rule 67
	L_quoted       reduce using rule 67
	L_Id           reduce using rule 67


State 135

	Stmt -> 'continue' .                                (rule 68)

	'!'            reduce using rule 68
	'&'            reduce using rule 68
	'('            reduce using rule 68
	'*'            reduce using rule 68
	'-'            reduce using rule 68
	'break'        reduce using rule 68
	'continue'     reduce using rule 68
	'false'        reduce using rule 68
	'for'          reduce using rule 68
	'func'         reduce using rule 68
	'if'           reduce using rule 68
	'readChar'     reduce using rule 68
	'readFloat'    reduce using rule 68
	'readInt'      reduce using rule 68
	'readString'   reduce using rule 68
	'return'       reduce using rule 68
	'true'         reduce using rule 68
	'var'          reduce using rule 68
	'writeChar'    reduce using rule 68
	'writeFloat'   reduce using rule 68
	'writeInt'     reduce using rule 68
	'writeString'  reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	L_integ        reduce using rule 68
	L_doubl        reduce using rule 68
	L_charac       reduce using rule 68
	L_quoted       reduce using rule 68
	L_Id           reduce using rule 68


State 136

	Stmt -> 'for' . RExp Block                          (rule 66)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 150
	Val            goto state 35
	LExp           goto state 36

State 137

	Stmt -> 'if' . RExp Block                           (rule 64)
	Stmt -> 'if' . RExp Block 'else' Block              (rule 65)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 149
	Val            goto state 35
	LExp           goto state 36

State 138

	Stmt -> 'return' . RExp                             (rule 69)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 148
	Val            goto state 35
	LExp           goto state 36

State 139

	Stmt -> 'writeChar' . '(' RExp ')'                  (rule 72)

	'('            shift, and enter state 147


State 140

	Stmt -> 'writeFloat' . '(' RExp ')'                 (rule 71)

	'('            shift, and enter state 146


State 141

	Stmt -> 'writeInt' . '(' RExp ')'                   (rule 70)

	'('            shift, and enter state 145


State 142

	Stmt -> 'writeString' . '(' RExp ')'                (rule 73)

	'('            shift, and enter state 144


State 143

	Block -> '{' ListStmt '}' .                         (rule 60)

	'!'            reduce using rule 60
	'&'            reduce using rule 60
	'('            reduce using rule 60
	'*'            reduce using rule 60
	'-'            reduce using rule 60
	'break'        reduce using rule 60
	'continue'     reduce using rule 60
	'else'         reduce using rule 60
	'false'        reduce using rule 60
	'for'          reduce using rule 60
	'func'         reduce using rule 60
	'if'           reduce using rule 60
	'readChar'     reduce using rule 60
	'readFloat'    reduce using rule 60
	'readInt'      reduce using rule 60
	'readString'   reduce using rule 60
	'return'       reduce using rule 60
	'true'         reduce using rule 60
	'var'          reduce using rule 60
	'writeChar'    reduce using rule 60
	'writeFloat'   reduce using rule 60
	'writeInt'     reduce using rule 60
	'writeString'  reduce using rule 60
	'{'            reduce using rule 60
	'}'            reduce using rule 60
	L_integ        reduce using rule 60
	L_doubl        reduce using rule 60
	L_charac       reduce using rule 60
	L_quoted       reduce using rule 60
	L_Id           reduce using rule 60
	%eof           reduce using rule 60


State 144

	Stmt -> 'writeString' '(' . RExp ')'                (rule 73)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 160
	Val            goto state 35
	LExp           goto state 36

State 145

	Stmt -> 'writeInt' '(' . RExp ')'                   (rule 70)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 159
	Val            goto state 35
	LExp           goto state 36

State 146

	Stmt -> 'writeFloat' '(' . RExp ')'                 (rule 71)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 158
	Val            goto state 35
	LExp           goto state 36

State 147

	Stmt -> 'writeChar' '(' . RExp ')'                  (rule 72)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 157
	Val            goto state 35
	LExp           goto state 36

State 148

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'return' RExp .                             (rule 69)

	'!'            reduce using rule 69
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 69
	'&&'           shift, and enter state 78
	'('            reduce using rule 69
	'*'            shift, and enter state 79
			(reduce using rule 69)

	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
			(reduce using rule 69)

	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'break'        reduce using rule 69
	'continue'     reduce using rule 69
	'false'        reduce using rule 69
	'for'          reduce using rule 69
	'func'         reduce using rule 69
	'if'           reduce using rule 69
	'readChar'     reduce using rule 69
	'readFloat'    reduce using rule 69
	'readInt'      reduce using rule 69
	'readString'   reduce using rule 69
	'return'       reduce using rule 69
	'true'         reduce using rule 69
	'var'          reduce using rule 69
	'writeChar'    reduce using rule 69
	'writeFloat'   reduce using rule 69
	'writeInt'     reduce using rule 69
	'writeString'  reduce using rule 69
	'{'            reduce using rule 69
	'||'           shift, and enter state 89
	'}'            reduce using rule 69
	L_integ        reduce using rule 69
	L_doubl        reduce using rule 69
	L_charac       reduce using rule 69
	L_quoted       reduce using rule 69
	L_Id           reduce using rule 69


State 149

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'if' RExp . Block                           (rule 64)
	Stmt -> 'if' RExp . Block 'else' Block              (rule 65)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'{'            shift, and enter state 120
	'||'           shift, and enter state 89

	Block          goto state 156

State 150

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'for' RExp . Block                          (rule 66)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'{'            shift, and enter state 120
	'||'           shift, and enter state 89

	Block          goto state 155

State 151

	ShortVarDecl -> ListId ':=' . ListRExp              (rule 57)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 34
	Val            goto state 35
	LExp           goto state 36
	ListRExp       goto state 154

State 152

	StmtSmpl -> LExp '=' . RExp                         (rule 76)

	'!'            shift, and enter state 38
	'&'            shift, and enter state 39
	'('            shift, and enter state 40
	'*'            shift, and enter state 41
	'-'            shift, and enter state 42
	'false'        shift, and enter state 43
	'readChar'     shift, and enter state 44
	'readFloat'    shift, and enter state 45
	'readInt'      shift, and enter state 46
	'readString'   shift, and enter state 47
	'true'         shift, and enter state 48
	L_integ        shift, and enter state 2
	L_doubl        shift, and enter state 49
	L_charac       shift, and enter state 50
	L_quoted       shift, and enter state 51
	L_Id           shift, and enter state 6

	Integer        goto state 28
	Double         goto state 29
	Char           goto state 30
	String         goto state 31
	Id             goto state 32
	Boolean        goto state 33
	RExp           goto state 153
	Val            goto state 35
	LExp           goto state 36

State 153

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	StmtSmpl -> LExp '=' RExp .                         (rule 76)

	'!'            reduce using rule 76
	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&'            reduce using rule 76
	'&&'           shift, and enter state 78
	'('            reduce using rule 76
	'*'            reduce using rule 76
	'+'            shift, and enter state 80
	'-'            reduce using rule 76
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'break'        reduce using rule 76
	'continue'     reduce using rule 76
	'false'        reduce using rule 76
	'for'          reduce using rule 76
	'func'         reduce using rule 76
	'if'           reduce using rule 76
	'readChar'     reduce using rule 76
	'readFloat'    reduce using rule 76
	'readInt'      reduce using rule 76
	'readString'   reduce using rule 76
	'return'       reduce using rule 76
	'true'         reduce using rule 76
	'var'          reduce using rule 76
	'writeChar'    reduce using rule 76
	'writeFloat'   reduce using rule 76
	'writeInt'     reduce using rule 76
	'writeString'  reduce using rule 76
	'{'            reduce using rule 76
	'||'           shift, and enter state 89
	'}'            reduce using rule 76
	L_integ        reduce using rule 76
	L_doubl        reduce using rule 76
	L_charac       reduce using rule 76
	L_quoted       reduce using rule 76
	L_Id           reduce using rule 76


State 154

	ShortVarDecl -> ListId ':=' ListRExp .              (rule 57)

	'!'            reduce using rule 57
	'&'            reduce using rule 57
	'('            reduce using rule 57
	'*'            reduce using rule 57
	'-'            reduce using rule 57
	'break'        reduce using rule 57
	'continue'     reduce using rule 57
	'false'        reduce using rule 57
	'for'          reduce using rule 57
	'func'         reduce using rule 57
	'if'           reduce using rule 57
	'readChar'     reduce using rule 57
	'readFloat'    reduce using rule 57
	'readInt'      reduce using rule 57
	'readString'   reduce using rule 57
	'return'       reduce using rule 57
	'true'         reduce using rule 57
	'var'          reduce using rule 57
	'writeChar'    reduce using rule 57
	'writeFloat'   reduce using rule 57
	'writeInt'     reduce using rule 57
	'writeString'  reduce using rule 57
	'{'            reduce using rule 57
	'}'            reduce using rule 57
	L_integ        reduce using rule 57
	L_doubl        reduce using rule 57
	L_charac       reduce using rule 57
	L_quoted       reduce using rule 57
	L_Id           reduce using rule 57


State 155

	Stmt -> 'for' RExp Block .                          (rule 66)

	'!'            reduce using rule 66
	'&'            reduce using rule 66
	'('            reduce using rule 66
	'*'            reduce using rule 66
	'-'            reduce using rule 66
	'break'        reduce using rule 66
	'continue'     reduce using rule 66
	'false'        reduce using rule 66
	'for'          reduce using rule 66
	'func'         reduce using rule 66
	'if'           reduce using rule 66
	'readChar'     reduce using rule 66
	'readFloat'    reduce using rule 66
	'readInt'      reduce using rule 66
	'readString'   reduce using rule 66
	'return'       reduce using rule 66
	'true'         reduce using rule 66
	'var'          reduce using rule 66
	'writeChar'    reduce using rule 66
	'writeFloat'   reduce using rule 66
	'writeInt'     reduce using rule 66
	'writeString'  reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	L_integ        reduce using rule 66
	L_doubl        reduce using rule 66
	L_charac       reduce using rule 66
	L_quoted       reduce using rule 66
	L_Id           reduce using rule 66


State 156

	Stmt -> 'if' RExp Block .                           (rule 64)
	Stmt -> 'if' RExp Block . 'else' Block              (rule 65)

	'!'            reduce using rule 64
	'&'            reduce using rule 64
	'('            reduce using rule 64
	'*'            reduce using rule 64
	'-'            reduce using rule 64
	'break'        reduce using rule 64
	'continue'     reduce using rule 64
	'else'         shift, and enter state 165
	'false'        reduce using rule 64
	'for'          reduce using rule 64
	'func'         reduce using rule 64
	'if'           reduce using rule 64
	'readChar'     reduce using rule 64
	'readFloat'    reduce using rule 64
	'readInt'      reduce using rule 64
	'readString'   reduce using rule 64
	'return'       reduce using rule 64
	'true'         reduce using rule 64
	'var'          reduce using rule 64
	'writeChar'    reduce using rule 64
	'writeFloat'   reduce using rule 64
	'writeInt'     reduce using rule 64
	'writeString'  reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	L_integ        reduce using rule 64
	L_doubl        reduce using rule 64
	L_charac       reduce using rule 64
	L_quoted       reduce using rule 64
	L_Id           reduce using rule 64


State 157

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'writeChar' '(' RExp . ')'                  (rule 72)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	')'            shift, and enter state 164
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'||'           shift, and enter state 89


State 158

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'writeFloat' '(' RExp . ')'                 (rule 71)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	')'            shift, and enter state 163
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'||'           shift, and enter state 89


State 159

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'writeInt' '(' RExp . ')'                   (rule 70)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	')'            shift, and enter state 162
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'||'           shift, and enter state 89


State 160

	RExp -> RExp . '&&' RExp                            (rule 18)
	RExp -> RExp . '||' RExp                            (rule 19)
	RExp -> RExp . '==' RExp                            (rule 21)
	RExp -> RExp . '!=' RExp                            (rule 22)
	RExp -> RExp . '<' RExp                             (rule 23)
	RExp -> RExp . '<=' RExp                            (rule 24)
	RExp -> RExp . '>' RExp                             (rule 25)
	RExp -> RExp . '>=' RExp                            (rule 26)
	RExp -> RExp . '+' RExp                             (rule 27)
	RExp -> RExp . '-' RExp                             (rule 28)
	RExp -> RExp . '*' RExp                             (rule 29)
	RExp -> RExp . '/' RExp                             (rule 30)
	RExp -> RExp . '%' RExp                             (rule 31)
	Stmt -> 'writeString' '(' RExp . ')'                (rule 73)

	'!='           shift, and enter state 76
	'%'            shift, and enter state 77
	'&&'           shift, and enter state 78
	')'            shift, and enter state 161
	'*'            shift, and enter state 79
	'+'            shift, and enter state 80
	'-'            shift, and enter state 82
	'/'            shift, and enter state 83
	'<'            shift, and enter state 84
	'<='           shift, and enter state 85
	'=='           shift, and enter state 86
	'>'            shift, and enter state 87
	'>='           shift, and enter state 88
	'||'           shift, and enter state 89


State 161

	Stmt -> 'writeString' '(' RExp ')' .                (rule 73)

	'!'            reduce using rule 73
	'&'            reduce using rule 73
	'('            reduce using rule 73
	'*'            reduce using rule 73
	'-'            reduce using rule 73
	'break'        reduce using rule 73
	'continue'     reduce using rule 73
	'false'        reduce using rule 73
	'for'          reduce using rule 73
	'func'         reduce using rule 73
	'if'           reduce using rule 73
	'readChar'     reduce using rule 73
	'readFloat'    reduce using rule 73
	'readInt'      reduce using rule 73
	'readString'   reduce using rule 73
	'return'       reduce using rule 73
	'true'         reduce using rule 73
	'var'          reduce using rule 73
	'writeChar'    reduce using rule 73
	'writeFloat'   reduce using rule 73
	'writeInt'     reduce using rule 73
	'writeString'  reduce using rule 73
	'{'            reduce using rule 73
	'}'            reduce using rule 73
	L_integ        reduce using rule 73
	L_doubl        reduce using rule 73
	L_charac       reduce using rule 73
	L_quoted       reduce using rule 73
	L_Id           reduce using rule 73


State 162

	Stmt -> 'writeInt' '(' RExp ')' .                   (rule 70)

	'!'            reduce using rule 70
	'&'            reduce using rule 70
	'('            reduce using rule 70
	'*'            reduce using rule 70
	'-'            reduce using rule 70
	'break'        reduce using rule 70
	'continue'     reduce using rule 70
	'false'        reduce using rule 70
	'for'          reduce using rule 70
	'func'         reduce using rule 70
	'if'           reduce using rule 70
	'readChar'     reduce using rule 70
	'readFloat'    reduce using rule 70
	'readInt'      reduce using rule 70
	'readString'   reduce using rule 70
	'return'       reduce using rule 70
	'true'         reduce using rule 70
	'var'          reduce using rule 70
	'writeChar'    reduce using rule 70
	'writeFloat'   reduce using rule 70
	'writeInt'     reduce using rule 70
	'writeString'  reduce using rule 70
	'{'            reduce using rule 70
	'}'            reduce using rule 70
	L_integ        reduce using rule 70
	L_doubl        reduce using rule 70
	L_charac       reduce using rule 70
	L_quoted       reduce using rule 70
	L_Id           reduce using rule 70


State 163

	Stmt -> 'writeFloat' '(' RExp ')' .                 (rule 71)

	'!'            reduce using rule 71
	'&'            reduce using rule 71
	'('            reduce using rule 71
	'*'            reduce using rule 71
	'-'            reduce using rule 71
	'break'        reduce using rule 71
	'continue'     reduce using rule 71
	'false'        reduce using rule 71
	'for'          reduce using rule 71
	'func'         reduce using rule 71
	'if'           reduce using rule 71
	'readChar'     reduce using rule 71
	'readFloat'    reduce using rule 71
	'readInt'      reduce using rule 71
	'readString'   reduce using rule 71
	'return'       reduce using rule 71
	'true'         reduce using rule 71
	'var'          reduce using rule 71
	'writeChar'    reduce using rule 71
	'writeFloat'   reduce using rule 71
	'writeInt'     reduce using rule 71
	'writeString'  reduce using rule 71
	'{'            reduce using rule 71
	'}'            reduce using rule 71
	L_integ        reduce using rule 71
	L_doubl        reduce using rule 71
	L_charac       reduce using rule 71
	L_quoted       reduce using rule 71
	L_Id           reduce using rule 71


State 164

	Stmt -> 'writeChar' '(' RExp ')' .                  (rule 72)

	'!'            reduce using rule 72
	'&'            reduce using rule 72
	'('            reduce using rule 72
	'*'            reduce using rule 72
	'-'            reduce using rule 72
	'break'        reduce using rule 72
	'continue'     reduce using rule 72
	'false'        reduce using rule 72
	'for'          reduce using rule 72
	'func'         reduce using rule 72
	'if'           reduce using rule 72
	'readChar'     reduce using rule 72
	'readFloat'    reduce using rule 72
	'readInt'      reduce using rule 72
	'readString'   reduce using rule 72
	'return'       reduce using rule 72
	'true'         reduce using rule 72
	'var'          reduce using rule 72
	'writeChar'    reduce using rule 72
	'writeFloat'   reduce using rule 72
	'writeInt'     reduce using rule 72
	'writeString'  reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	L_integ        reduce using rule 72
	L_doubl        reduce using rule 72
	L_charac       reduce using rule 72
	L_quoted       reduce using rule 72
	L_Id           reduce using rule 72


State 165

	Stmt -> 'if' RExp Block 'else' . Block              (rule 65)

	'{'            shift, and enter state 120

	Block          goto state 166

State 166

	Stmt -> 'if' RExp Block 'else' Block .              (rule 65)

	'!'            reduce using rule 65
	'&'            reduce using rule 65
	'('            reduce using rule 65
	'*'            reduce using rule 65
	'-'            reduce using rule 65
	'break'        reduce using rule 65
	'continue'     reduce using rule 65
	'false'        reduce using rule 65
	'for'          reduce using rule 65
	'func'         reduce using rule 65
	'if'           reduce using rule 65
	'readChar'     reduce using rule 65
	'readFloat'    reduce using rule 65
	'readInt'      reduce using rule 65
	'readString'   reduce using rule 65
	'return'       reduce using rule 65
	'true'         reduce using rule 65
	'var'          reduce using rule 65
	'writeChar'    reduce using rule 65
	'writeFloat'   reduce using rule 65
	'writeInt'     reduce using rule 65
	'writeString'  reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	L_integ        reduce using rule 65
	L_doubl        reduce using rule 65
	L_charac       reduce using rule 65
	L_quoted       reduce using rule 65
	L_Id           reduce using rule 65


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 88
Number of terminals: 56
Number of non-terminals: 24
Number of states: 167
